{
    "file": "/home/azmain/GitHub Codes/so_dataset/Class_3.java",
    "java_code": "package common_JDK;\npublic class Class_3 {\n\n    private static final String SYMBOL_INFINITE           = \"\\u221e\";\n    private static final char   SYMBOL_MINUS              = '-';\n    private static final char   SYMBOL_ZERO               = '0';\n    private static final int    DECIMAL_LEADING_GROUPS    = 10;\n    private static final int    EXPONENTIAL_INT_THRESHOLD = 1000000000; // After this value switch to exponential notation\n    private static final double EXPONENTIAL_DEC_THRESHOLD = 0.0001; // Below this value switch to exponential notation\n\n    private DecimalFormat decimalFormat;\n    private DecimalFormat decimalFormatLong;\n    private DecimalFormat exponentialFormat;\n\n    private char groupSeparator;\n\n    public void NumberFormatter(int decimalPlaces) {\n        configureDecimalPlaces(decimalPlaces);\n    }\n\n    public void configureDecimalPlaces(int decimalPlaces) {\n        if (decimalPlaces <= 0) {\n            throw new IllegalArgumentException(\"Invalid decimal places\");\n        }\n\n        DecimalFormatSymbols separators = new DecimalFormatSymbols(Locale.getDefault());\n        separators.setMinusSign(SYMBOL_MINUS);\n        separators.setZeroDigit(SYMBOL_ZERO);\n\n        groupSeparator = separators.getGroupingSeparator();\n\n        StringBuilder decimal = new StringBuilder();\n        StringBuilder exponential = new StringBuilder(\"0.\");\n\n        for (int i = 0; i < DECIMAL_LEADING_GROUPS; i++) {\n            decimal.append(\"###\").append(i == DECIMAL_LEADING_GROUPS - 1 ? \".\" : \",\");\n        }\n\n        for (int i = 0; i < decimalPlaces; i++) {\n            decimal.append(\"#\");\n            exponential.append(\"0\");\n        }\n\n        exponential.append(\"E0\");\n\n        decimalFormat = new DecimalFormat(decimal.toString(), separators);\n        decimalFormatLong = new DecimalFormat(decimal.append(\"####\").toString(), separators);\n        exponentialFormat = new DecimalFormat(exponential.toString(), separators);\n\n        decimalFormat.setRoundingMode(RoundingMode.HALF_UP);\n        decimalFormatLong.setRoundingMode(RoundingMode.HALF_UP);\n        exponentialFormat.setRoundingMode(RoundingMode.HALF_UP);\n    }\n\n    public String format(double value) {\n        String result;\n        if (Double.isNaN(value)) {\n            result = \"\";\n        } else if (Double.isInfinite(value)) {\n            result = String.valueOf(SYMBOL_INFINITE);\n        } else {\n            double absValue = Math.abs(value);\n            if (absValue >= 1) {\n                if (absValue >= EXPONENTIAL_INT_THRESHOLD) {\n                    value = Math.floor(value);\n                    result = exponentialFormat.format(value);\n                } else {\n                    result = decimalFormat.format(value);\n                }\n            } else if (absValue < 1 && absValue > 0) {\n                if (absValue >= EXPONENTIAL_DEC_THRESHOLD) {\n                    result = decimalFormat.format(value);\n                    if (result.equalsIgnoreCase(\"0\")) {\n                        result = decimalFormatLong.format(value);\n                    }\n                } else {\n                    result = exponentialFormat.format(value);\n                }\n            } else {\n                result = \"0\";\n            }\n        }\n        return result;\n    }\n\n    public String formatWithoutGroupSeparators(double value) {\n        return removeGroupSeparators(format(value));\n    }\n\n    public double parse(String value, double defValue) {\n        try {\n            return decimalFormat.parse(value).doubleValue();\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return defValue;\n    }\n\n    private String removeGroupSeparators(String number) {\n        return number.replace(String.valueOf(groupSeparator), \"\");\n    }\n\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/so_dataset/Class_3.java:11: error: cannot find symbol\n    private DecimalFormat decimalFormat;\n            ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:12: error: cannot find symbol\n    private DecimalFormat decimalFormatLong;\n            ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:13: error: cannot find symbol\n    private DecimalFormat exponentialFormat;\n            ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:26: error: cannot find symbol\n        DecimalFormatSymbols separators = new DecimalFormatSymbols(Locale.getDefault());\n        ^\n  symbol:   class DecimalFormatSymbols\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:26: error: cannot find symbol\n        DecimalFormatSymbols separators = new DecimalFormatSymbols(Locale.getDefault());\n                                              ^\n  symbol:   class DecimalFormatSymbols\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:26: error: cannot find symbol\n        DecimalFormatSymbols separators = new DecimalFormatSymbols(Locale.getDefault());\n                                                                   ^\n  symbol:   variable Locale\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:46: error: cannot find symbol\n        decimalFormat = new DecimalFormat(decimal.toString(), separators);\n                            ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:47: error: cannot find symbol\n        decimalFormatLong = new DecimalFormat(decimal.append(\"####\").toString(), separators);\n                                ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:48: error: cannot find symbol\n        exponentialFormat = new DecimalFormat(exponential.toString(), separators);\n                                ^\n  symbol:   class DecimalFormat\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:50: error: cannot find symbol\n        decimalFormat.setRoundingMode(RoundingMode.HALF_UP);\n                                      ^\n  symbol:   variable RoundingMode\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:51: error: cannot find symbol\n        decimalFormatLong.setRoundingMode(RoundingMode.HALF_UP);\n                                          ^\n  symbol:   variable RoundingMode\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:52: error: cannot find symbol\n        exponentialFormat.setRoundingMode(RoundingMode.HALF_UP);\n                                          ^\n  symbol:   variable RoundingMode\n  location: class Class_3\n/home/azmain/GitHub Codes/so_dataset/Class_3.java:93: error: cannot find symbol\n        } catch (ParseException e) {\n                 ^\n  symbol:   class ParseException\n  location: class Class_3\n13 errors\n",
    "return_code": 1
}