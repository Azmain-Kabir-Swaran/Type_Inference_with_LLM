{
    "file": "/home/azmain/GitHub Codes/so_dataset/hibernate_class_4.java",
    "java_code": "public class hibernate_class_4 {\n    private static final SessionFactory sessionFactory;\n\n    static {\n        try {\n            sessionFactory = new Configuration ().configure ().buildSessionFactory ();\n        } catch (HibernateException he) {\n            System.err.println (he);\n            throw new ExceptionInInitializerError (he);\n        }\n    }\n\n    public static SessionFactory getSessionFactory () {\n        return sessionFactory;\n    }\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/so_dataset/hibernate_class_4.java:2: error: cannot find symbol\n    private static final SessionFactory sessionFactory;\n                         ^\n  symbol:   class SessionFactory\n  location: class hibernate_class_4\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_4.java:13: error: cannot find symbol\n    public static SessionFactory getSessionFactory () {\n                  ^\n  symbol:   class SessionFactory\n  location: class hibernate_class_4\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_4.java:6: error: cannot find symbol\n            sessionFactory = new Configuration ().configure ().buildSessionFactory ();\n                                 ^\n  symbol:   class Configuration\n  location: class hibernate_class_4\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_4.java:7: error: cannot find symbol\n        } catch (HibernateException he) {\n                 ^\n  symbol:   class HibernateException\n  location: class hibernate_class_4\n4 errors\n",
    "return_code": 1
}