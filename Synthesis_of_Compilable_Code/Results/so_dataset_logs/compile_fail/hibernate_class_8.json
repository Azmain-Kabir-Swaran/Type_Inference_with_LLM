{
    "file": "/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java",
    "java_code": "@MappedSuperclass\npublic abstract class hibernate_class_8 {\nprivate static final long serialVersionUID = 1L;\nprivate Date from;\nprivate Date thru;\n\n/**\n * Determines if a model is active. A model is active if now is after or\n * equal to from , and thru is either null, or after now, or equal to now.\n */\n@Transient\npublic boolean isActive() {\n Date now = new Date();\n boolean afterFrom = from.before(now) || from.equals(now);\n boolean beforeThru = thru == null || thru.after(now)\n   || thru.equals(now);\n return afterFrom && beforeThru;\n}\n\n@AssertTrue(message = \"Dates are not valid the thru date must be empty, or after the fromdate.\")\npublic boolean areDatesValid() {\n if (thru == null) {\n  return true;\n } else {\n  return thru.after(from);\n }\n}\n\n\n@Temporal(TemporalType.TIMESTAMP)\n@NotNull\n@Column(name = \"fromDate\")\npublic Date getFrom() {\n return from;\n}\n\npublic void setFrom(Date from) {\n this.from = from;\n}\n\n@Temporal(TemporalType.TIMESTAMP)\npublic Date getThru() {\n return thru;\n}\n\npublic void setThru(Date thru) {\n this.thru = thru;\n}\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:1: error: cannot find symbol\n@MappedSuperclass\n ^\n  symbol: class MappedSuperclass\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:4: error: cannot find symbol\nprivate Date from;\n        ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:5: error: cannot find symbol\nprivate Date thru;\n        ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:33: error: cannot find symbol\npublic Date getFrom() {\n       ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:37: error: cannot find symbol\npublic void setFrom(Date from) {\n                    ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:42: error: cannot find symbol\npublic Date getThru() {\n       ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:46: error: cannot find symbol\npublic void setThru(Date thru) {\n                    ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:11: error: cannot find symbol\n@Transient\n ^\n  symbol:   class Transient\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:20: error: cannot find symbol\n@AssertTrue(message = \"Dates are not valid the thru date must be empty, or after the fromdate.\")\n ^\n  symbol:   class AssertTrue\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:30: error: cannot find symbol\n@Temporal(TemporalType.TIMESTAMP)\n ^\n  symbol:   class Temporal\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:31: error: cannot find symbol\n@NotNull\n ^\n  symbol:   class NotNull\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:32: error: cannot find symbol\n@Column(name = \"fromDate\")\n ^\n  symbol:   class Column\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:41: error: cannot find symbol\n@Temporal(TemporalType.TIMESTAMP)\n ^\n  symbol:   class Temporal\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:13: error: cannot find symbol\n Date now = new Date();\n ^\n  symbol:   class Date\n  location: class hibernate_class_8\n/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java:13: error: cannot find symbol\n Date now = new Date();\n                ^\n  symbol:   class Date\n  location: class hibernate_class_8\n15 errors\n",
    "return_code": 1
}