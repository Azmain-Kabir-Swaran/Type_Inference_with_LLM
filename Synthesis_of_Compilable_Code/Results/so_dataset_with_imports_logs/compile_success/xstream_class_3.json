{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/xstream_class_3.java",
    "java_code": "\n//ID = 836805\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.thoughtworks.xstream.XStream;\nimport com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver;\n\npublic class xstream_class_3 {\n\n\n    public static void main(String[] args) {\n        JettisonMappedXmlDriver xmlDriver = new JettisonMappedXmlDriver();        \n        XStream xstream = new XStream(xmlDriver);\n\n\n        List messages = new ArrayList();\n        Object mock1 = null;\n\t\tmessages.add(mock1);\n        Object mock2 = null;\n\t\tmessages.add(mock2);\n        Object mock3 = null;\n\t\tmessages.add(mock3);\n\n        String jsonString = xstream.toXML(messages);\n\n        //JSON list format is non-intuitive single element array with class name fields\n        System.out.println(jsonString);\n        List xstreamJSONUnmarshalledMessages = (List)xstream.fromXML(jsonString);\n        //This will print 3 messages unmarshalled\n        System.out.println(\"XStream format JSON Number of messages unmarshalled: \" + xstreamJSONUnmarshalledMessages.size());\n\n        //Attempt to deserialize a reasonable looking JSON string\n        String jsonTest = \n              \"{\"+\n                \"\\\"list\\\" : [\"+ \n                          \"{\"+\n                          \"\\\"MockMessage\\\" : {\"+\n                              \"\\\"val\\\" : 1\"+\n                          \"}\"+\n                      \"}, {\"+\n                          \"\\\"MockMessage\\\" : {\"+\n                              \"\\\"val\\\" : 1\"+\n                          \"}\"+\n                      \"}, {\"+\n                          \"\\\"MockMessageOther\\\" : {\"+\n                              \"\\\"otherVal\\\" : 1\"+\n                          \"}\"+\n                      \"} ]\"+\n                  \"};\";\n\n        List unmarshalledMessages = (List)xstream.fromXML(jsonTest);\n\n        //We expect 3 messages but XStream only deserializes one\n        System.out.println(\"Normal format JSON Number of messages unmarshalled: \" + unmarshalledMessages.size());\n    }\n\n}",
    "stdout": "",
    "stderr": "Note: /home/azmain/GitHub Codes/so_dataset_with_imports/xstream_class_3.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n",
    "return_code": 0
}