{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/xstream_class_28.java",
    "java_code": "\n//ID=25098261\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.thoughtworks.xstream.converters.Converter;\nimport com.thoughtworks.xstream.converters.MarshallingContext;\nimport com.thoughtworks.xstream.converters.UnmarshallingContext;\nimport com.thoughtworks.xstream.io.HierarchicalStreamReader;\nimport com.thoughtworks.xstream.io.HierarchicalStreamWriter;\n\npublic class xstream_class_28 {\n\tpublic class MapEntryConverter implements Converter {\n\t\t  public class java {\n\n\t\t    }\n\n\t\tpublic boolean canConvert(Class clazz) {\n\t\t    return Map.class.isAssignableFrom(clazz);\n\t\t  }\n\n\t\t  public void marshal(Object value, HierarchicalStreamWriter writer, MarshallingContext context) {\n\t\t    Map<String, Integer> map = (Map<String, Integer>) value;\n\t\t    for (Map.Entry<String, Integer> entry : map.entrySet()) {\n\t\t      writer.startNode(entry.getKey().toString());\n\t\t      writer.setValue(entry.getValue().toString());\n\t\t      writer.endNode();\n\t\t    }\n\t\t  }\n\n\t\t  public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n\t\t    Map<String, Integer> map = new HashMap<String, Integer>();\n\n\t\t    while (reader.hasMoreChildren()) {\n\t\t      reader.moveDown();\n\t\t      map.put(reader.getNodeName(), new Integer(reader.getValue()));\n\t\t      reader.moveUp();\n\t\t    }\n\t\t    return map;\n\t\t  }\n\t\t}\n}\n",
    "stdout": "",
    "stderr": "Note: /home/azmain/GitHub Codes/so_dataset_with_imports/xstream_class_28.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n",
    "return_code": 0
}