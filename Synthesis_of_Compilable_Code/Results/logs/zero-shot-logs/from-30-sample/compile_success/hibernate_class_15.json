{
    "file": "/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_15.java",
    "java_code": "package hibernate;\nimport java.sql.Blob;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport org.hibernate.Hibernate;\nimport java.io.ByteArrayOutputStream;\nimport java.sql.SQLException;\nimport java.util.Date;\n//ID = 1561543\n\n\n\n/**\n * @author dudekta\n */\npublic class hibernate_class_15 {\n    private Long id;\n    private Date creationTimeStamp;\n    private String name;\n    private String type;\n    private String description;\n    private Long length;\n    private byte[] content;\n\n\n    /** Don't invoke this. Used by Hibernate only. */\n    public void setContentBlob(Blob imageBlob) {\n     this.content = this.toByteArray(imageBlob);\n    }\n\n    /** Don't invoke this. Used by Hibernate only. */\n    public Blob getContentBlob() {\n     return Hibernate.createBlob(this.content);\n    }\n\n    private byte[] toByteArray(Blob fromBlob) {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        try {\n         return toByteArrayImpl(fromBlob, baos);\n        } catch (SQLException e) {\n         throw new RuntimeException(e);\n        } catch (IOException e) {\n         throw new RuntimeException(e);\n        } finally {\n         if (baos != null) {\n          try {\n           baos.close();\n          } catch (IOException ex) {\n          }\n         }\n        }\n       }\n\n    private byte[] toByteArrayImpl(Blob fromBlob, ByteArrayOutputStream baos)\n    throws SQLException, IOException {\n    byte[] buf = new byte[4000];\n    InputStream is = fromBlob.getBinaryStream();\n    try {\n     for (;;) {\n      int dataSize = is.read(buf);\n\n      if (dataSize == -1)\n       break;\n      baos.write(buf, 0, dataSize);\n     }\n    } finally {\n     if (is != null) {\n      try {\n       is.close();\n      } catch (IOException ex) {\n      }\n     }\n    }\n    return baos.toByteArray();\n   }\n\n    /**\n     * @return Returns the creationTimeStamp.\n     */\n    public Date getCreationTimeStamp() {\n        return creationTimeStamp;\n    }\n    /**\n     * @param creationTimeStamp\n     *            The creationTimeStamp to set.\n     */\n    public void setCreationTimeStamp(Date creationTimeStamp) {\n        this.creationTimeStamp = creationTimeStamp;\n    }\n    /**\n     * @return Returns the description.\n     */\n    public String getDescription() {\n        return description;\n    }\n    /**\n     * @param description\n     *            The description to set.\n     */\n    public void setDescription(String description) {\n        this.description = description;\n    }\n    /**\n     * @return Returns the id.\n     */\n    public Long getId() {\n        return id;\n    }\n    /**\n     * @param id\n     *            The id to set.\n     */\n    public void setId(Long id) {\n        this.id = id;\n    }\n    /**\n     * @return Returns the length.\n     */\n    public Long getLength() {\n        return length;\n    }\n    /**\n     * @param length\n     *            The length to set.\n     */\n    public void setLength(Long length) {\n        this.length = length;\n    }\n    /**\n     * @return Returns the name.\n     */\n    public String getName() {\n        return name;\n    }\n    /**\n     * @param name\n     *            The name to set.\n     */\n    public void setName(String name) {\n        this.name = name;\n    }\n    /**\n     * @return Returns the type.\n     */\n    public String getType() {\n        return type;\n    }\n    /**\n     * @param type\n     *            The type to set.\n     */\n    public void setType(String type) {\n        this.type = type;\n    }\n    /**\n     * @return Returns the content.\n     */\n    public byte[] getContent() {\n        return content;\n    }\n\n    /**\n     * @param content\n     *            The content to set.\n     */\n    public void setContent(byte[] content) {\n        this.content = content;\n    }\n}",
    "stdout": "",
    "stderr": "Note: /home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_15.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n",
    "return_code": 0
}