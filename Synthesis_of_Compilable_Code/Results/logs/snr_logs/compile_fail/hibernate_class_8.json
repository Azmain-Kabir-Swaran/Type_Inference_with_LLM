{
    "file": "/home/azmain/snr_fixed/hibernate_class_8.java",
    "java_code": "package hibernate;\n//ID = 1212669\n\nimport javax.persistence.Column;\nimport com.sun.istack.internal.NotNull;\nimport javax.persistence.Temporal;\nimport java.util.Date;\nimport javax.persistence.MappedSuperclass;\nimport javax.persistence.TemporalType;\nimport org.hibernate.validator.AssertTrue;\nimport java.beans.Transient;\n\n/**\n * Several models are date range sensitive, this base class provides that basic\n * functionality.\n * \n * @author jim\n * \n */\n@MappedSuperclass\npublic abstract class hibernate_class_8 {\n\tprivate static final long serialVersionUID = 1L;\n\tprivate Date from;\n\tprivate Date thru;\n\n\t/**\n\t * Determines if a model is active. A model is active if now is after or\n\t * equal to from , and thru is either null, or after now, or equal to now.\n\t */\n\t@Transient\n\tpublic boolean isActive() {\n\t\tDate now = new Date();\n\t\tboolean afterFrom = from.before(now) || from.equals(now);\n\t\tboolean beforeThru = thru == null || thru.after(now) || thru.equals(now);\n\t\treturn afterFrom && beforeThru;\n\t}\n\n\t@AssertTrue(message = \"Dates are not valid the thru date must be empty, or after the fromdate.\")\n\tpublic boolean areDatesValid() {\n\t\tif (thru == null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn thru.after(from);\n\t\t}\n\t}\n\n\t@Temporal(TemporalType.TIMESTAMP)\n\t@NotNull\n\t@Column(name = \"fromDate\")\n\tpublic Date getFrom() {\n\t\treturn from;\n\t}\n\n\tpublic void setFrom(Date from) {\n\t\tthis.from = from;\n\t}\n\n\t@Temporal(TemporalType.TIMESTAMP)\n\tpublic Date getThru() {\n\t\treturn thru;\n\t}\n\n\tpublic void setThru(Date thru) {\n\t\tthis.thru = thru;\n\t}\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/hibernate_class_8.java:5: error: package com.sun.istack.internal does not exist\nimport com.sun.istack.internal.NotNull;\n                              ^\n/home/azmain/snr_fixed/hibernate_class_8.java:48: error: cannot find symbol\n\t@NotNull\n\t ^\n  symbol:   class NotNull\n  location: class hibernate_class_8\n2 errors\n",
    "return_code": 1
}