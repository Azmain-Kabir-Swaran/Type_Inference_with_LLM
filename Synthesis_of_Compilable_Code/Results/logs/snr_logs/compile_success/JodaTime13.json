{
    "file": "/home/azmain/snr_fixed/JodaTime13.java",
    "java_code": "package jodatime;\n\nimport static org.junit.Assert.*;\nimport org.joda.time.format.PeriodFormatterBuilder;\nimport org.junit.Test;\nimport org.joda.time.format.PeriodFormatter;\nimport org.joda.time.Period;\n\npublic class JodaTime13 {\n\t//\tID = 4585883\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t}\n\n\t@Test\n\tpublic void second() {\n\t\tassertEquals(\"00:00:01\", OurDateTimeFormatter.format(1000));\n\t}\n\n\t@Test\n\tpublic void minute() {\n\t\tassertEquals(\"00:01:00\", OurDateTimeFormatter.format(1000 * 60));\n\t}\n\n\t@Test\n\tpublic void hour() {\n\t\tassertEquals(\"01:00:00\", OurDateTimeFormatter.format(1000 * 60 * 60));\n\t}\n\n\t@Test\n\tpublic void almostMidnight() {\n\t\tfinal int secondsInDay = 60 * 60 * 24;\n\t\tassertEquals(\"23:59:59\", OurDateTimeFormatter.format(1000 * (secondsInDay - 1)));\n\t}\n\n\t@Test\n\tpublic void twoDaysAndAHalf() {\n\t\tfinal int secondsInDay = 60 * 60 * 24;\n\t\tassertEquals(\"12:00:00 and 2 days\", OurDateTimeFormatter.format(1000 * secondsInDay * 5 / 2));\n\t}\n\n\tpublic static class OurDateTimeFormatter {\n\t\tpublic OurDateTimeFormatter() {\n\t\t}\n\n\t\tprivate final static PeriodFormatter dateFormat = new PeriodFormatterBuilder().appendDays()\n\t\t\t\t.appendSuffix(\" day\", \" days\").appendSeparator(\" \").appendHours().appendSeparator(\":\").appendMinutes()\n\t\t\t\t.minimumPrintedDigits(2).appendSeparator(\":\").appendSeconds().minimumPrintedDigits(2).toFormatter();\n\n\t\tpublic static String format(long millis) {\n\t\t\treturn dateFormat.print(new Period(millis).normalizedStandard());\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}