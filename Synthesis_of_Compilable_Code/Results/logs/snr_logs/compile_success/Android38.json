{
    "file": "/home/azmain/snr_fixed/Android38.java",
    "java_code": "package androidExamples;\n//ID = 1118447\n\nimport java.io.File;\nimport java.io.DataOutputStream;\nimport java.net.URL;\nimport java.net.MalformedURLException;\nimport java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.HttpURLConnection;\n\npublic class Android38 {\n\tstatic String serviceDomain = \"http://staging.abaqus.net\";\n\tstatic String postUrl = serviceDomain + \"/geo/upl/wupload/pictures\";\n\tstatic String CRLF = \"\\r\\n\";\n\tstatic String twoHyphens = \"--\";\n\tstatic String boundary = \"*****mgd*****\";\n\n\tprivate String name = null;\n\tprivate String password = null;\n\tprivate DataOutputStream dataStream = null;\n\n\tenum ReturnCode {\n\t\t\t\t\t\tnoPicture,\n\t\t\t\t\t\tunknown,\n\t\t\t\t\t\thttp201,\n\t\t\t\t\t\thttp400,\n\t\t\t\t\t\thttp401,\n\t\t\t\t\t\thttp403,\n\t\t\t\t\t\thttp404,\n\t\t\t\t\t\thttp500\n\t};\n\n\tpublic Android38(String name, String password) {\n\t\tthis.name = name;\n\t\tthis.password = password;\n\t}\n\n\tpublic static void setServiceDomain(String domainName) {\n\t\tserviceDomain = domainName;\n\t}\n\n\tpublic static String getServiceDomain() {\n\t\treturn serviceDomain;\n\t}\n\n\tpublic ReturnCode uploadPicture(String pictureFileName) {\n\t\tFile uploadFile = new File(pictureFileName);\n\n\t\tif (uploadFile.exists())\n\t\t\ttry {\n\t\t\t\tFileInputStream fileInputStream = new FileInputStream(uploadFile);\n\t\t\t\tURL connectURL = new URL(postUrl);\n\t\t\t\tHttpURLConnection conn = (HttpURLConnection) connectURL.openConnection();\n\n\t\t\t\tconn.setDoInput(true);\n\t\t\t\tconn.setDoOutput(true);\n\t\t\t\tconn.setUseCaches(false);\n\t\t\t\tconn.setRequestMethod(\"POST\");\n\n\t\t\t\tconn.setRequestProperty(\"User-Agent\", \"myGeodiary-V1\");\n\t\t\t\tconn.setRequestProperty(\"Connection\", \"Keep-Alive\");\n\t\t\t\tconn.setRequestProperty(\"Content-Type\", \"multipart/form-data;boundary=\" + boundary);\n\n\t\t\t\tconn.connect();\n\n\t\t\t\tdataStream = new DataOutputStream(conn.getOutputStream());\n\n\t\t\t\twriteFormField(\"login\", name);\n\t\t\t\twriteFormField(\"password\", password);\n\t\t\t\twriteFileField(\"photo1\", pictureFileName, \"image/jpg\", fileInputStream);\n\n\t\t\t\t// final closing boundary line\n\t\t\t\tdataStream.writeBytes(twoHyphens + boundary + twoHyphens + CRLF);\n\n\t\t\t\tfileInputStream.close();\n\t\t\t\tdataStream.flush();\n\t\t\t\tdataStream.close();\n\t\t\t\tdataStream = null;\n\n\t\t\t\tString response = getResponse(conn);\n\t\t\t\tconn.getResponseCode();\n\n\t\t\t\tif (response.contains(\"uploaded successfully\"))\n\t\t\t\t\treturn ReturnCode.http201;\n\t\t\t\telse\n\t\t\t\t\t// for now assume bad name/password\n\t\t\t\t\treturn ReturnCode.http401;\n\t\t\t} catch (MalformedURLException mue) {\n\t\t\t\t// Log.e(Tag, \"error: \" + mue.getMessage(), mue); \n\t\t\t\tSystem.out.println(\"GeoPictureUploader.uploadPicture: Malformed URL: \" + mue.getMessage());\n\t\t\t\treturn ReturnCode.http400;\n\t\t\t} catch (IOException ioe) {\n\t\t\t\t// Log.e(Tag, \"error: \" + ioe.getMessage(), ioe); \n\t\t\t\tSystem.out.println(\"GeoPictureUploader.uploadPicture: IOE: \" + ioe.getMessage());\n\t\t\t\treturn ReturnCode.http500;\n\t\t\t} catch (Exception e) {\n\t\t\t\t// Log.e(Tag, \"error: \" + ioe.getMessage(), ioe); \n\t\t\t\tSystem.out.println(\"GeoPictureUploader.uploadPicture: unknown: \" + e.getMessage());\n\t\t\t\treturn ReturnCode.unknown;\n\t\t\t}\n\t\telse {\n\t\t\treturn ReturnCode.noPicture;\n\t\t}\n\t}\n\n\t/**\n\t * @param conn\n\t * @return\n\t */\n\tprivate String getResponse(HttpURLConnection conn) {\n\t\ttry {\n\t\t\tDataInputStream dis = new DataInputStream(conn.getInputStream());\n\t\t\tbyte[] data = new byte[1024];\n\t\t\tint len = dis.read(data, 0, 1024);\n\n\t\t\tdis.close();\n\t\t\tconn.getResponseCode();\n\n\t\t\tif (len > 0)\n\t\t\t\treturn new String(data, 0, len);\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"GeoPictureUploader: biffed it getting HTTPResponse\");\n\t\t\t//Log.e(TAG, \"GeoPictureUploader: biffed it getting HTTPResponse\");\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t *  this mode of reading response no good either\n\t */\n\tprivate String getResponseOrig(HttpURLConnection conn) {\n\t\tInputStream is = null;\n\t\ttry {\n\t\t\tis = conn.getInputStream();\n\t\t\t// scoop up the reply from the server\n\t\t\tint ch;\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\twhile ((ch = is.read()) != -1) {\n\t\t\t\tsb.append((char) ch);\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"GeoPictureUploader: biffed it getting HTTPResponse\");\n\t\t\t//Log.e(TAG, \"GeoPictureUploader: biffed it getting HTTPResponse\");\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (is != null)\n\t\t\t\t\tis.close();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * write one form field to dataSream\n\t * @param fieldName\n\t * @param fieldValue\n\t */\n\tprivate void writeFormField(String fieldName, String fieldValue) {\n\t\ttry {\n\t\t\tdataStream.writeBytes(twoHyphens + boundary + CRLF);\n\t\t\tdataStream.writeBytes(\"Content-Disposition: form-data; name=\\\"\" + fieldName + \"\\\"\" + CRLF);\n\t\t\tdataStream.writeBytes(CRLF);\n\t\t\tdataStream.writeBytes(fieldValue);\n\t\t\tdataStream.writeBytes(CRLF);\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"GeoPictureUploader.writeFormField: got: \" + e.getMessage());\n\t\t\t//Log.e(TAG, \"GeoPictureUploader.writeFormField: got: \" + e.getMessage());\n\t\t}\n\t}\n\n\t/**\n\t * write one file field to dataSream\n\t * @param fieldName - name of file field\n\t * @param fieldValue - file name\n\t * @param type - mime type\n\t * @param fileInputStream - stream of bytes that get sent up\n\t */\n\tprivate void writeFileField(String fieldName, String fieldValue, String type, FileInputStream fis) {\n\t\ttry {\n\t\t\t// opening boundary line\n\t\t\tdataStream.writeBytes(twoHyphens + boundary + CRLF);\n\t\t\tdataStream.writeBytes(\"Content-Disposition: form-data; name=\\\"\" + fieldName + \"\\\";filename=\\\"\" + fieldValue\n\t\t\t\t\t+ \"\\\"\" + CRLF);\n\t\t\tdataStream.writeBytes(\"Content-Type: \" + type + CRLF);\n\t\t\tdataStream.writeBytes(CRLF);\n\n\t\t\t// create a buffer of maximum size \n\t\t\tint bytesAvailable = fis.available();\n\t\t\tint maxBufferSize = 1024;\n\t\t\tint bufferSize = Math.min(bytesAvailable, maxBufferSize);\n\t\t\tbyte[] buffer = new byte[bufferSize];\n\t\t\t// read file and write it into form... \n\t\t\tint bytesRead = fis.read(buffer, 0, bufferSize);\n\t\t\twhile (bytesRead > 0) {\n\t\t\t\tdataStream.write(buffer, 0, bufferSize);\n\t\t\t\tbytesAvailable = fis.available();\n\t\t\t\tbufferSize = Math.min(bytesAvailable, maxBufferSize);\n\t\t\t\tbytesRead = fis.read(buffer, 0, bufferSize);\n\t\t\t}\n\n\t\t\t// closing CRLF\n\t\t\tdataStream.writeBytes(CRLF);\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"GeoPictureUploader.writeFormField: got: \" + e.getMessage());\n\t\t\t//Log.e(TAG, \"GeoPictureUploader.writeFormField: got: \" + e.getMessage());\n\t\t}\n\t}\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tif (args.length >= 0) {\n\t\t\tAndroid38 gpu = new Android38(\"john\", \"notmyrealpassword\");\n\t\t\tString picName = args[0];\n\n\t\t\tgpu.uploadPicture(picName);\n\t\t\tSystem.out.printf(\"done\");\n\t\t}\n\t}\n\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}