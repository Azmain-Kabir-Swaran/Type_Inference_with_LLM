{
    "file": "/home/azmain/snr_fixed/xstream_class_43.java",
    "java_code": "package xstream;\n//https://developmentality.wordpress.com/2010/07/13/xstream-introduction-and-java-collections-serialization-problem-workaround/\n\nimport java.util.List;\nimport com.thoughtworks.xstream.XStream;\nimport com.thoughtworks.xstream.io.xml.DomDriver;\nimport java.util.ArrayList;\n\npublic class xstream_class_43 {\n\tpublic List<Book> books;\n\n\tpublic xstream_class_43(List<Book> books) {\n\t\tthis.books = books;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\tStringBuilder b = new StringBuilder();\n\t\tb.append(\"Library with \" + books.size() + \" books:\\n\");\n\t\tfor (Book book : books) {\n\t\t\tb.append(book.toString());\n\t\t\t// Skip a line\n\t\t\tb.append(\"\\n\");\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tpublic static class Book {\n\t\tprivate String title;\n\t\tprivate String author;\n\n\t\tpublic Book(String title, String author) {\n\t\t\tthis.title = title;\n\t\t\tthis.author = author;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn \"\\\"\" + title + \"\\\" by \" + author;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tList<Book> books = new ArrayList<Book>();\n\t\tbooks.add(new Book(\"The Talent Code: Greatness Isn't Born. It's Grown. Here's How\", \"Daniel Coyle\"));\n\n\t\txstream_class_43 lib = new xstream_class_43(books);\n\t\t// Handles conversion of our objects into XML\n\t\tXStream stream = new XStream(new DomDriver());\n\n\t\tString xml = stream.toXML(lib);\n\t\t// fromXML returns a general Object; need to cast it into a Library\n\t\txstream_class_43 lib2 = (xstream_class_43) stream.fromXML(xml);\n\n\t\tSystem.out.println(xml);\n\t\tSystem.out.println(lib);\n\t\tSystem.out.println(lib2);\n\t\tSystem.out.println(\"Libraries equal: \" + lib.toString().equals(lib2.toString()));\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}