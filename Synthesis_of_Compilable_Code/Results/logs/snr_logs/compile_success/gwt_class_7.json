{
    "file": "/home/azmain/snr_fixed/gwt_class_7.java",
    "java_code": "package gwt;\n//ID = 1539885\n\nimport com.google.gwt.user.client.ui.VerticalPanel;\nimport com.google.gwt.user.client.ui.Panel;\nimport com.google.gwt.user.client.Timer;\nimport com.google.gwt.core.client.EntryPoint;\nimport com.extjs.gxt.ui.client.widget.table.Table;\nimport com.google.gwt.user.client.ui.RootPanel;\n\npublic class gwt_class_7 {\n\tpublic class GWTMemoryIssue implements EntryPoint {\n\t\t//Run with or without table\n\t\tprivate static final boolean WITH_TABLE = false;\n\n\t\t//\t\tprivate final TestServiceAsync rpcService = GWT.create(TestService.class);\n\n\t\tprivate Panel panel;\n\t\tprivate Timer timer;\n\t\tprivate Table table;\n\n\t\tpublic void onModuleLoad() {\n\t\t\tRootPanel rootPanel = RootPanel.get();\n\n\t\t\tthis.panel = new VerticalPanel();\n\t\t\tthis.panel.setSize(\"100%\", \"100%\");\n\n\t\t\trootPanel.add(panel);\n\n\t\t\tif (WITH_TABLE) {\n\t\t\t\tloadTable();\n\t\t\t} else {\n\t\t\t\tstartUpdateTask();\n\t\t\t}\n\n\t\t}\n\n\t\tprivate void startUpdateTask() {\n\t\t\tthis.timer = new Timer() {\n\n\t\t\t\tpublic void run() {\n\t\t\t\t\t//\t\t            GWTMemoryIssue.this.getTableData();\n\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.timer.scheduleRepeating(2000);\n\t\t}\n\n\t\tpublic void loadTable() {\n\t\t\tRunnable onLoadCallback = new Runnable() {\n\t\t\t\tpublic void run() {\n\t\t\t\t\t//\t\t            GWTMemoryIssue.this.table = new Table(createTableData(), createTableOptions());\n\t\t\t\t\tGWTMemoryIssue.this.table.setSize(\"100%\", \"100%\");\n\t\t\t\t\tGWTMemoryIssue.this.panel.add(GWTMemoryIssue.this.table);\n\t\t\t\t\tGWTMemoryIssue.this.startUpdateTask();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//\t\t    VisualizationUtils.loadVisualizationApi(onLoadCallback, Table.PACKAGE);\n\t\t}\n\n\t\t//\t\tprivate Options createTableOptions() {\n\t\t//\t\t    Options options = Options.create();\n\t\t//\n\t\t//\t\t    return options;\n\t\t//\t\t}\n\n\t\t//\t\tprivate DataTable createTableData() {\n\t\t//\t\t    DataTable data = DataTable.create();\n\t\t//\n\t\t//\t\t    data.addColumn(ColumnType.STRING, \"Name\");\n\t\t//\t\t    data.addColumn(ColumnType.NUMBER, \"Intval 1\");\n\t\t//\t\t    data.addColumn(ColumnType.NUMBER, \"Intval 2\");\n\t\t//\t\t    data.addColumn(ColumnType.NUMBER, \"Intval 3\");\n\t\t//\n\t\t//\t\t    return data;\n\t\t//\t\t}\n\n\t\t//\t\tprivate void getTableData() {\n\t\t////\t\t    rpcService.getListOfItems(new AsyncCallback<ArrayList<ListItem>>(){\n\t\t//\t\t        public void onFailure(Throwable caught) {\n\t\t//\t\t            // Do nothing\n\t\t//\t\t        }\n\t\t//\n\t\t//\t\t        public void onSuccess(ArrayList<ListItem> result) {\n\t\t//\t\t            if (WITH_TABLE){\n\t\t////\t\t                GWTMemoryIssue.this.updateTableData(result);\n\t\t//\t\t            }else{\n\t\t//\t\t                //Ignore the data from the server\n\t\t//\t\t            }\n\t\t//\t\t        }\n\t\t//\t\t    });\n\t}\n\n\t//\t\tprivate void updateTableData(ArrayList<ListItem> result) {\n\t//\t\t    DataTable data = createTableData();\n\t//\n\t//\t\t    data.addRows(result.size());\n\t//\n\t//\t\t    int row = 0;\n\t//\t\t    for (ListItem li : result) {\n\t//\t\t        data.setValue(row, 0, li.getName());\n\t//\t\t        data.setValue(row, 1, li.getIntVal());\n\t//\t\t        data.setValue(row, 2, li.getIntSecondVal());\n\t//\t\t        data.setValue(row, 3, li.getThirdIntVal());\n\t//\t\t        row++;\n\t//\t\t    }\n\t//\n\t//\t\t    this.table.draw(data, createTableOptions());\n\t//\t\t}\n}",
    "stdout": "",
    "stderr": "Note: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n",
    "return_code": 0
}