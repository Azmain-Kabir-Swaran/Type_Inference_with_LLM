{
    "file": "/home/azmain/snr_fixed/gwt_class_17.java",
    "java_code": "package gwt;\n//ID = 1881173\n\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.google.gwt.user.client.ui.Image;\nimport com.google.gwt.user.client.ui.DockPanel;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.AbstractImagePrototype;\nimport com.google.gwt.user.client.ui.ImageBundle;\nimport com.extjs.gxt.ui.client.widget.VerticalPanel;\nimport com.google.gwt.core.client.GWT;\n\npublic class gwt_class_17 extends Composite {\n\n\t// Data  \n\tprivate String firstName = null;\n\tprivate String lastName = null;\n\tprivate String picSquareUrl = null;\n\n\t// Elements  \n\tprivate Image picSquare = new Image();\n\tprivate Image logo = new Image();\n\tprivate Button logoutButton = new Button(\"Logout\");\n\tprivate DockPanel panel = new DockPanel();\n\tprivate HTML html = new HTML(\"Welcome to Sandpit.\");\n\n\t/**  \n\t * Create a remote service proxy to talk to the server-side User Data  \n\t * service.  \n\t */\n\t//    private final UserDataServiceAsync userDataService = GWT.create(UserDataService.class);  \n\n\tpublic gwt_class_17() {\n\n\t\t//        this.rpcWidget = new RPCWidget(this);  \n\n\t\tthis.initProfileImage();\n\t\tthis.initLogoImage();\n\n\t\tpanel.add(picSquare, DockPanel.WEST);\n\t\tpanel.add(html, DockPanel.CENTER);\n\n\t\tVerticalPanel verticalPanel = new VerticalPanel();\n\t\tverticalPanel.add(logo);\n\t\tverticalPanel.add(logoutButton);\n\n\t\tpanel.add(verticalPanel, DockPanel.EAST);\n\n\t\t//        panel.add(rpcWidget, DockPanel.SOUTH);  \n\n\t\tinitWidget(panel);\n\n\t}\n\n\tprivate void initProfileImage() {\n\n\t\t// Display ajaxLoader.gif  \n\t\tSandpitImageBundle sib = GWT.create(SandpitImageBundle.class);\n\t\tAbstractImagePrototype aip = sib.ajaxLoader();\n\t\tsib.applyTo(this.picSquare);\n\n\t}\n\n\tprivate void initLogoImage() {\n\n\t\t// Display logo.jpg  \n\t\tSandpitImageBundle sib = GWT.create(SandpitImageBundle.class);\n\t\tAbstractImagePrototype aip = sib.logo();\n\t\taip.applyTo(this.logo);\n\n\t}\n\n\t// Other methods omitted...  \n\tpublic interface SandpitImageBundle extends ImageBundle {\n\n\t\t/**  \n\t\t * Would match the file 'logo.jpg', 'logo.gif', or 'logo.png' located in the  \n\t\t * same package as this type.  \n\t\t */\n\t\tpublic AbstractImagePrototype logo();\n\n\t\tpublic void applyTo(Image picSquare);\n\n\t\t/**  \n\t\t * Would match the file 'ajaxLoader.jpg', 'ajaxLoader.gif', or 'ajaxLoader.png' located in the\n\t\t * same package as this type.  \n\t\t */\n\t\tpublic AbstractImagePrototype ajaxLoader();\n\n\t}\n\n}",
    "stdout": "",
    "stderr": "Note: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n",
    "return_code": 0
}