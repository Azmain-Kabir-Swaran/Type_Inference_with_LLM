{
    "file": "/home/azmain/snr_fixed/hibernate_class_17.java",
    "java_code": "package hibernate;\n//ID = 1938476\n\nimport org.hibernate.shards.strategy.selection.RoundRobinShardSelectionStrategy;\nimport org.hibernate.shards.strategy.resolution.ShardResolutionStrategy;\nimport org.hibernate.shards.strategy.ShardStrategy;\nimport org.hibernate.shards.loadbalance.RoundRobinShardLoadBalancer;\nimport org.hibernate.shards.strategy.access.ShardAccessStrategy;\nimport org.hibernate.shards.strategy.ShardStrategyImpl;\nimport javax.naming.NamingException;\nimport org.hibernate.shards.ShardId;\nimport org.hibernate.shards.strategy.access.SequentialShardAccessStrategy;\nimport org.hibernate.SessionFactory;\nimport org.hibernate.shards.cfg.ConfigurationToShardConfigurationAdapter;\nimport org.hibernate.shards.strategy.selection.ShardSelectionStrategy;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.hibernate.shards.strategy.resolution.AllShardsShardResolutionStrategy;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.shards.ShardedConfiguration;\nimport org.hibernate.shards.strategy.ShardStrategyFactory;\nimport org.hibernate.shards.cfg.ShardConfiguration;\n\npublic class hibernate_class_17 {\n\tpublic class SessionFactoryImpl {\n\n\t\tprivate static final String SHARD_CFG_0 = \"/com/hibshards/config/shard0.hibernate.cfg.xml\";\n\t\tprivate static final String SHARD_CFG_1 = \"/com/hibshards/config/shard1.hibernate.cfg.xml\";\n\t\tprivate static final String SHARDED_TABLE = \"com/hibshards/orm/weather.hbm.xml\";\n\n\t\tpublic SessionFactory createSessionFactory() throws NamingException {\n\t\t\tConfiguration prototypeConfig = new Configuration().configure(SHARD_CFG_0);\n\t\t\tprototypeConfig.addResource(SHARDED_TABLE);\n\n\t\t\tList<ShardConfiguration> shardConfigs = new ArrayList<ShardConfiguration>();\n\t\t\tshardConfigs.add(buildShardConfig(SHARD_CFG_0));\n\t\t\tshardConfigs.add(buildShardConfig(SHARD_CFG_1));\n\n\t\t\tShardStrategyFactory shardStrategyFactory = buildShardStrategyFactory();\n\t\t\tShardedConfiguration shardedConfig = new ShardedConfiguration(prototypeConfig, shardConfigs,\n\t\t\t\t\tshardStrategyFactory);\n\t\t\treturn shardedConfig.buildShardedSessionFactory();\n\t\t}\n\n\t\tprivate ShardStrategyFactory buildShardStrategyFactory() {\n\n\t\t\tShardStrategyFactory shardStrategyFactory = new ShardStrategyFactory() {\n\t\t\t\tpublic ShardStrategy newShardStrategy1(List<ShardId> shardIds) {\n\t\t\t\t\tRoundRobinShardLoadBalancer loadBalancer = new RoundRobinShardLoadBalancer(shardIds);\n\t\t\t\t\tShardSelectionStrategy pss = new RoundRobinShardSelectionStrategy(loadBalancer);\n\t\t\t\t\tShardResolutionStrategy prs = new AllShardsShardResolutionStrategy(shardIds);\n\t\t\t\t\tShardAccessStrategy pas = new SequentialShardAccessStrategy();\n\t\t\t\t\treturn new ShardStrategyImpl(pss, prs, pas);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic ShardStrategy newShardStrategy(List<ShardId> arg0) {\n\t\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn shardStrategyFactory;\n\t\t}\n\n\t\tprivate ShardConfiguration buildShardConfig(String configFile) {\n\t\t\tConfiguration config = new Configuration().configure(configFile);\n\t\t\treturn new ConfigurationToShardConfigurationAdapter(config);\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}