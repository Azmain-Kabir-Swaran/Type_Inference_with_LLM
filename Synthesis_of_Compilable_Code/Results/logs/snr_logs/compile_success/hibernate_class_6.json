{
    "file": "/home/azmain/snr_fixed/hibernate_class_6.java",
    "java_code": "package hibernate;\n//ID = 1116268\n\nimport java.io.File;\nimport org.hibernate.EntityMode;\nimport org.dom4j.Document;\nimport java.net.MalformedURLException;\nimport java.util.Iterator;\nimport org.hibernate.SessionFactory;\nimport org.dom4j.io.SAXReader;\nimport java.util.List;\nimport org.dom4j.DocumentException;\nimport org.hibernate.Session;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.tool.hbm2ddl.SchemaExport;\nimport org.hibernate.HibernateException;\nimport org.hibernate.Transaction;\n\npublic class hibernate_class_6 {\n\n\tpublic static void main(final String[] args) throws MalformedURLException {\n\t\tFile baseDir = new File(\"C:\\\\workspaces\\\\hobby\");\n\t\thibernate_class_6 importer = new hibernate_class_6();\n\t\tConfiguration config = importer.setupDb(baseDir);\n\n\t\tif (config != null) {\n\t\t\timporter.importContents(new File(baseDir, \"people.xml\"), config);\n\t\t}\n\t}\n\n\tprivate void importContents(final File file, final Configuration config) throws MalformedURLException {\n\t\tSessionFactory sessionFactory = config.buildSessionFactory();\n\t\tSession session = sessionFactory.openSession();\n\t\tTransaction tx = session.beginTransaction();\n\t\tSession dom4jSession = session.getSession(EntityMode.DOM4J);\n\n\t\tSAXReader saxReader = new SAXReader();\n\t\ttry {\n\t\t\tDocument document = saxReader.read(file);\n\n\t\t\tList list = document.selectNodes(\"//Person\");\n\t\t\tIterator iter = list.iterator();\n\n\t\t\twhile (iter.hasNext()) {\n\t\t\t\tObject personObj = iter.next();\n\t\t\t\t//                dom4jSession.save(Person.class.getName(), personObj);\n\t\t\t}\n\n\t\t\tsession.flush();\n\t\t\ttx.commit();\n\t\t\tsession.close();\n\t\t} catch (HibernateException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (DocumentException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate Configuration setupDb(final File baseDir) throws HibernateException {\n\t\tConfiguration cfg = new Configuration();\n\t\tcfg.addFile(new File(baseDir, \"name/seller/rich/hobby/Person.hbm.xml\"));\n\t\tcfg.addFile(new File(baseDir, \"name/seller/rich/hobby/Hobby.hbm.xml\"));\n\n\t\tSchemaExport export = new SchemaExport(cfg);\n\n\t\texport.setOutputFile(\"hobbyDB.txt\");\n\t\texport.execute(false, true, false, false);\n\t\treturn cfg;\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}