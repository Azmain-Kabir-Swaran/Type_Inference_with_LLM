{
    "file": "/home/azmain/snr_fixed/Class_20.java",
    "java_code": "/*\nDate: 1/19/17\nURL: http://stackoverflow.com/questions/10367698/java-multiple-file-transfer-over-socket\n*/\npackage common_JDK;\n\nimport java.io.File;\nimport java.io.BufferedInputStream;\nimport java.io.DataOutputStream;\nimport java.io.DataInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.FileOutputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\nclass Class_20 {\n\tpublic static void receive() {\n\n\t\ttry {\n\t\t\tDataInputStream dis = new DataInputStream(new BufferedInputStream(null));\n\t\t\tDataOutputStream dos = new DataOutputStream(new BufferedOutputStream(null, 0));\n\t\t\t//read the number of files from the client\n\t\t\tint number = dis.readInt();\n\t\t\tArrayList<File> files = new ArrayList<File>(number);\n\t\t\tSystem.out.println(\"Number of Files to be received: \" + number);\n\t\t\t//read file names, add files to arraylist\n\t\t\tfor (int i = 0; i < number; i++) {\n\t\t\t\tFile file = new File(dis.readUTF());\n\t\t\t\tfiles.add(file);\n\t\t\t}\n\t\t\tint n = 0;\n\t\t\tbyte[] buf = new byte[4092];\n\n\t\t\t//outer loop, executes one for each file\n\t\t\tfor (int i = 0; i < files.size(); i++) {\n\n\t\t\t\tSystem.out.println(\"Receiving file: \" + files.get(i).getName());\n\t\t\t\t//create a new fileoutputstream for each new file\n\t\t\t\tFileOutputStream fos = new FileOutputStream(\n\t\t\t\t\t\t\"C:\\\\users\\\\tom5\\\\desktop\\\\salestools\\\\\" + files.get(i).getName());\n\t\t\t\t//read file\n\t\t\t\twhile ((n = dis.read(buf)) != -1) {\n\t\t\t\t\tfos.write(buf, 0, n);\n\t\t\t\t\tfos.flush();\n\t\t\t\t}\n\t\t\t\tfos.close();\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\n\t\t}\n\t}\n\n\tpublic void send(ArrayList<File> files) {\n\n\t\ttry {\n\t\t\tDataInputStream dis = new DataInputStream(new BufferedInputStream(null));\n\t\t\tDataOutputStream dos = new DataOutputStream(new BufferedOutputStream(null));\n\t\t\tSystem.out.println(files.size());\n\t\t\t//write the number of files to the server\n\t\t\tdos.writeInt(files.size());\n\t\t\tdos.flush();\n\n\t\t\t//write file names \n\t\t\tfor (int i = 0; i < files.size(); i++) {\n\t\t\t\tdos.writeUTF(files.get(i).getName());\n\t\t\t\tdos.flush();\n\t\t\t}\n\n\t\t\t//buffer for file writing, to declare inside or outside loop?\n\t\t\tint n = 0;\n\t\t\tbyte[] buf = new byte[4092];\n\t\t\t//outer loop, executes one for each file\n\t\t\tfor (int i = 0; i < files.size(); i++) {\n\n\t\t\t\tSystem.out.println(files.get(i).getName());\n\t\t\t\t//create new fileinputstream for each file\n\t\t\t\tFileInputStream fis = new FileInputStream(files.get(i));\n\n\t\t\t\t//write file to dos\n\t\t\t\twhile ((n = fis.read(buf)) != -1) {\n\t\t\t\t\tdos.write(buf, 0, n);\n\t\t\t\t\tdos.flush();\n\n\t\t\t\t}\n\t\t\t\t//should i close the dataoutputstream here and make a new one each time?\n\t\t\t}\n\t\t\t//or is this good?\n\t\t\tdos.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}