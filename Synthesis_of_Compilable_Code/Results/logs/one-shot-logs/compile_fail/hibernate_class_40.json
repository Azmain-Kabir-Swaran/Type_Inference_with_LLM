{
    "file": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_40.java",
    "java_code": "package hibernate;\nimport org.hibernate.Session;\nimport java.util.Iterator;\nimport java.util.List;\nimport org.hibernate.query.Query;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.SessionFactory;\n//ID = 3681045\n\n\n\npublic class hibernate_class_40 {\n\n\n    public static void main(String[] args) {\n\n        Session session = null;\n        //String query = \"select example.id, example.data from Example example\";\n\n        try{\n\n            SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();\n            session = sessionFactory.openSession();\n\n            System.out.println(\"selecting records\");\n            Query q = session.getNamedQuery(\"getRecordsSP\");\n    //      Query q =  session.createSQLQuery(\"call getRecords\",\"\",Example.class);\n\n            System.out.print(\"Done\");\n            List l = q.list();\n\n\n            for(Iterator it = l.iterator() ;it.hasNext();){\n                Object row [] = (Object [])it.next();\n                System.out.println(row.length);\n        //      System.out.println(row[0]);\n        //      System.out.println(\"ID \" + row[0]);\n        //  System.out.println(\"Data \"+ row[1]);\n            }\n\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        finally{\n            session.flush();\n            session.close();\n\n    }\n}\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_40.java:5: error: package org.hibernate.query does not exist\nimport org.hibernate.query.Query;\n                          ^\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_40.java:26: error: cannot find symbol\n            Query q = session.getNamedQuery(\"getRecordsSP\");\n            ^\n  symbol:   class Query\n  location: class hibernate_class_40\n2 errors\n",
    "return_code": 1
}