{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/gwt_class_2.java",
    "java_code": "\nimport com.google.gwt.core.client.EntryPoint;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Button;\nimport com.google.gwt.user.client.ui.DecoratorPanel;\nimport com.google.gwt.user.client.ui.FileUpload;\nimport com.google.gwt.user.client.ui.FormPanel;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitEvent;\nimport com.google.gwt.user.client.ui.ListBox;\nimport com.google.gwt.user.client.ui.RootPanel;\nimport com.google.gwt.user.client.ui.TextBox;\nimport com.google.gwt.user.client.ui.VerticalPanel;\n\npublic class gwt_class_2 implements EntryPoint {\n\n   public void onModuleLoad() {\n      // Create a FormPanel and point it at a service.\n      final FormPanel form = new FormPanel();\n      form.setAction(\"/myFormHandler\");\n\n      // Because we're going to add a FileUpload widget, \n      // we'll need to set the form to use the POST method, \n      // and multipart MIME encoding.\n      form.setEncoding(FormPanel.ENCODING_MULTIPART);\n      form.setMethod(FormPanel.METHOD_POST);\n\n      // Create a panel to hold all of the form widgets.\n      VerticalPanel panel = new VerticalPanel();\n      panel.setSpacing(10);\n      form.setWidget(panel);\n\n      // Create a TextBox, giving it a name so that it will be submitted.\n      final TextBox tb = new TextBox();\n      tb.setWidth(\"220\");\n\n      tb.setName(\"textBoxFormElement\");\n      panel.add(tb);\n\n      // Create a ListBox, giving it a name and \n      // some values to be associated with its options.\n      ListBox lb = new ListBox();\n      lb.setName(\"listBoxFormElement\");\n      lb.addItem(\"item1\", \"item1\");\n      lb.addItem(\"item2\", \"item2\");\n      lb.addItem(\"item3\", \"item3\");\n      lb.setWidth(\"220\");\n      panel.add(lb);\n\n      // Create a FileUpload widget.\n      FileUpload upload = new FileUpload();\n      upload.setName(\"uploadFormElement\");\n      panel.add(upload);\n\n      // Add a 'submit' button.\n      panel.add(new Button(\"Submit\", new ClickHandler() {\n         @Override\n         public void onClick(ClickEvent event) {\n            form.submit();\t\t\t\t\t\n         }\n      }));\n\n      // Add an event handler to the form.\n      form.addSubmitHandler(new FormPanel.SubmitHandler() {\n         @Override\n         public void onSubmit(SubmitEvent event) {\n            // This event is fired just before the form is submitted. \n            // We can take this opportunity to perform validation.\n            if (tb.getText().length() == 0) {\n               Window.alert(\"The text box must not be empty\");\n               event.cancel();\n            }\t\t\t\t\t\n         }\n      });\n\n      form.addSubmitCompleteHandler(new FormPanel.SubmitCompleteHandler() {\n         @Override\n         public void onSubmitComplete(SubmitCompleteEvent event) {\n            // When the form submission is successfully completed,\n            // this event is fired. Assuming the service returned \n            // a response of type text/html, we can get the result\n            // here.\n            Window.alert(event.getResults());\t\t\t\t\t\n         }\n      });\n\n      DecoratorPanel decoratorPanel = new DecoratorPanel();\n      decoratorPanel.add(form);\n      // Add the widgets to the root panel.\n      RootPanel.get().add(decoratorPanel);\n}\n\n}",
    "stdout": "",
    "stderr": "Note: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n",
    "return_code": 0
}