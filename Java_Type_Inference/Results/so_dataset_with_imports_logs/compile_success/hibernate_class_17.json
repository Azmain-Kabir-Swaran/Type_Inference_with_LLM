{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/hibernate_class_17.java",
    "java_code": "\n//ID = 1938476\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.naming.NamingException;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.shards.ShardId;\nimport org.hibernate.shards.ShardedConfiguration;\nimport org.hibernate.shards.cfg.ConfigurationToShardConfigurationAdapter;\nimport org.hibernate.shards.cfg.ShardConfiguration;\nimport org.hibernate.shards.loadbalance.RoundRobinShardLoadBalancer;\nimport org.hibernate.shards.strategy.ShardStrategy;\nimport org.hibernate.shards.strategy.ShardStrategyFactory;\nimport org.hibernate.shards.strategy.ShardStrategyImpl;\nimport org.hibernate.shards.strategy.access.SequentialShardAccessStrategy;\nimport org.hibernate.shards.strategy.access.ShardAccessStrategy;\nimport org.hibernate.shards.strategy.resolution.AllShardsShardResolutionStrategy;\nimport org.hibernate.shards.strategy.resolution.ShardResolutionStrategy;\nimport org.hibernate.shards.strategy.selection.RoundRobinShardSelectionStrategy;\nimport org.hibernate.shards.strategy.selection.ShardSelectionStrategy;\n\npublic class hibernate_class_17 {\n\tpublic class SessionFactoryImpl {\n\n\t    private static final String SHARD_CFG_0 = \"/com/hibshards/config/shard0.hibernate.cfg.xml\";\n\t    private static final String SHARD_CFG_1 = \"/com/hibshards/config/shard1.hibernate.cfg.xml\";\n\t    private static final String SHARDED_TABLE = \"com/hibshards/orm/weather.hbm.xml\";\n\n\t    public SessionFactory createSessionFactory() throws NamingException {\n\t     Configuration prototypeConfig = new Configuration().configure( SHARD_CFG_0 );\n\t     prototypeConfig.addResource( SHARDED_TABLE );\n\n\t     List<ShardConfiguration> shardConfigs = new ArrayList<ShardConfiguration>();\n\t     shardConfigs.add( buildShardConfig( SHARD_CFG_0 ) );\n\t     shardConfigs.add( buildShardConfig( SHARD_CFG_1 ) );\n\n\t     ShardStrategyFactory shardStrategyFactory = buildShardStrategyFactory();\n\t     ShardedConfiguration shardedConfig = new ShardedConfiguration(\n\t       prototypeConfig,\n\t       shardConfigs,\n\t       shardStrategyFactory);\n\t     return shardedConfig.buildShardedSessionFactory();\n\t    }\n\n\t    private ShardStrategyFactory buildShardStrategyFactory() {\n\n\t     ShardStrategyFactory shardStrategyFactory = new ShardStrategyFactory() {\n\t      public ShardStrategy newShardStrategy1(List<ShardId> shardIds) {\n\t       RoundRobinShardLoadBalancer loadBalancer = new RoundRobinShardLoadBalancer( shardIds );\n\t       ShardSelectionStrategy pss = new RoundRobinShardSelectionStrategy( loadBalancer );\n\t       ShardResolutionStrategy prs = new AllShardsShardResolutionStrategy( shardIds );\n\t       ShardAccessStrategy pas = new SequentialShardAccessStrategy();\n\t       return new ShardStrategyImpl( pss, prs, pas );\n\t      }\n\n\t\t@Override\n\t\tpublic ShardStrategy newShardStrategy(List<ShardId> arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\t     };\n\t     return shardStrategyFactory;\n\t    }\n\n\t    private ShardConfiguration buildShardConfig( String configFile ) {\n\t     Configuration config = new Configuration().configure( configFile );\n\t     return new ConfigurationToShardConfigurationAdapter( config );\n\t    }\n\t}\n}\n",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}