{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/hibernate_class_6.java",
    "java_code": "\n//ID = 1116268\nimport java.io.File;\nimport java.net.MalformedURLException;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.dom4j.Document;\nimport org.dom4j.DocumentException;\nimport org.dom4j.io.SAXReader;\nimport org.hibernate.EntityMode;\nimport org.hibernate.HibernateException;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.hibernate.Transaction;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.tool.hbm2ddl.SchemaExport;\n\npublic class hibernate_class_6 {\n\n    public static void main(final String[] args) throws MalformedURLException {\n        File baseDir = new File(\"C:\\\\workspaces\\\\hobby\");\n        hibernate_class_6 importer = new hibernate_class_6();\n        Configuration config = importer.setupDb(baseDir);\n\n        if (config != null) {\n            importer.importContents(new File(baseDir, \"people.xml\"), config);\n        }\n    }\n\n    private void importContents(final File file, final Configuration config) throws MalformedURLException {\n        SessionFactory sessionFactory = config.buildSessionFactory();\n        Session session = sessionFactory.openSession();    \n        Transaction tx = session.beginTransaction();\n        Session dom4jSession = session.getSession(EntityMode.DOM4J);\n\n        SAXReader saxReader = new SAXReader();\n        try {\n            Document document = saxReader.read(file);\n\n            List list = document.selectNodes(\"//Person\");\n            Iterator iter = list.iterator();\n\n            while (iter.hasNext()) {\n                Object personObj = iter.next();\n//                dom4jSession.save(Person.class.getName(), personObj);\n            }\n\n            session.flush();\n            tx.commit();\n            session.close();\n        } catch (HibernateException e) {\n            e.printStackTrace();\n        } catch (DocumentException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private Configuration setupDb(final File baseDir) throws HibernateException {\n        Configuration cfg = new Configuration();\n        cfg.addFile(new File(baseDir, \"name/seller/rich/hobby/Person.hbm.xml\"));\n        cfg.addFile(new File(baseDir, \"name/seller/rich/hobby/Hobby.hbm.xml\"));\n\n        SchemaExport export = new SchemaExport(cfg);\n\n        export.setOutputFile(\"hobbyDB.txt\");\n        export.execute(false, true, false, false);\n        return cfg;\n    }\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}