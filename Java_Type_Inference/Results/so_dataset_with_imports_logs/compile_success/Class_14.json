{
    "file": "/home/azmain/GitHub Codes/so_dataset_with_imports/Class_14.java",
    "java_code": "/*\nDate: 1/19/17\nURL: http://stackoverflow.com/questions/160970/how-do-i-invoke-a-java-method-when-given-the-method-name-as-a-string\n*/\npackage common_JDK;\nimport java.lang.reflect.Method;\npublic class Class_14\n{\n\n    public static void main(String[] args) throws Exception {\n        String dogClassName = \"com.mypackage.bean.Dog\";\n        Class<?> dogClass = Class.forName(dogClassName); // convert string classname to class\n        Object dog = dogClass.newInstance(); // invoke empty constructor\n\n        String methodName = \"\";\n\n        // with single parameter, return void\n        methodName = \"setName\";\n        Method setNameMethod = dog.getClass().getMethod(methodName, String.class);\n        setNameMethod.invoke(dog, \"Mishka\"); // pass arg\n\n        // without parameters, return string\n        methodName = \"getName\";\n        Method getNameMethod = dog.getClass().getMethod(methodName);\n        String name = (String) getNameMethod.invoke(dog); // explicit cast\n\n        // with multiple parameters\n        methodName = \"printDog\";\n        Class<?>[] paramTypes = {String.class, int.class};\n        Method printDogMethod = dog.getClass().getMethod(methodName, paramTypes);\n        printDogMethod.invoke(dog, name, 3); // pass args\n    }\n    \n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}