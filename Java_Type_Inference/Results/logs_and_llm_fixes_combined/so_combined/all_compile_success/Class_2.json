{
    "attempt": 2,
    "file": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/Results/llm_fixes/fixed_codes/so-fix/Class_2.java",
    "java_code": "import javax.swing.*;\nimport javax.swing.border.TitledBorder;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.image.BufferedImage;\nimport javax.swing.event.*;\nimport javax.swing.table.*;\nimport javax.swing.text.*;\n\npublic class Class_2 {\n\n    public static void main(String[] args) {\n\n        Runnable r = new Runnable() {\n\n            public void run() {\n                final JFrame frame = new JFrame(\"Nested Layout Example\");\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n                final JPanel gui = new JPanel(new BorderLayout(5,5));\n                gui.setBorder( new TitledBorder(\"BorderLayout(5,5)\") );\n\n                //JToolBar tb = new JToolBar();\n                JPanel plafComponents = new JPanel(\n                        new FlowLayout(FlowLayout.RIGHT, 3,3));\n                plafComponents.setBorder(\n                        new TitledBorder(\"FlowLayout(FlowLayout.RIGHT, 3,3)\") );\n\n                final UIManager.LookAndFeelInfo[] plafInfos =\n                        UIManager.getInstalledLookAndFeels();\n                String[] plafNames = new String[plafInfos.length];\n                for (int ii=0; ii<plafInfos.length; ii++) {\n                    plafNames[ii] = plafInfos[ii].getName();\n                }\n                final JComboBox<String> plafChooser = new JComboBox<>(plafNames);\n                plafComponents.add(plafChooser);\n\n                final JCheckBox pack = new JCheckBox(\"Pack on PLAF change\", true);\n                plafComponents.add(pack);\n\n                plafChooser.addActionListener( new ActionListener(){\n                    public void actionPerformed(ActionEvent ae) {\n                        int index = plafChooser.getSelectedIndex();\n                        try {\n                            UIManager.setLookAndFeel(\n                                    plafInfos[index].getClassName() );\n                            SwingUtilities.updateComponentTreeUI(frame);\n                            if (pack.isSelected()) {\n                                frame.pack();\n                                frame.setMinimumSize(frame.getSize());\n                            }\n                        } catch(Exception e) {\n                            e.printStackTrace();\n                        }\n                    }\n                } );\n\n                gui.add(plafComponents, BorderLayout.NORTH);\n\n                JPanel dynamicLabels = new JPanel(new BorderLayout(4,4));\n                dynamicLabels.setBorder(\n                        new TitledBorder(\"BorderLayout(4,4)\") );\n                gui.add(dynamicLabels, BorderLayout.WEST);\n\n                final JPanel labels = new JPanel(new GridLayout(0,2,3,3));\n                labels.setBorder(\n                        new TitledBorder(\"GridLayout(0,2,3,3)\") );\n\n                JButton addNew = new JButton(\"Add Another Label\");\n                dynamicLabels.add( addNew, BorderLayout.NORTH );\n                addNew.addActionListener( new ActionListener(){\n\n                    private int labelCount = 0;\n\n                    public void actionPerformed(ActionEvent ae) {\n                        labels.add( new JLabel(\"Label \" + ++labelCount) );\n                        frame.validate();\n                    }\n                } );\n\n                dynamicLabels.add( new JScrollPane(labels), BorderLayout.CENTER );\n\n                String[] header = {\"Name\", \"Value\"};\n                String[] a = new String[0];\n                String[] names = System.getProperties().\n                        stringPropertyNames().toArray(a);\n                String[][] data = new String[names.length][2];\n                for (int ii=0; ii<names.length; ii++) {\n                    data[ii][0] = names[ii];\n                    data[ii][1] = System.getProperty(names[ii]);\n                }\n                DefaultTableModel model = new DefaultTableModel(data, header);\n                JTable table = new JTable(model);\n                try {\n                    // 1.6+\n                    table.setAutoCreateRowSorter(true);\n                } catch(Exception continuewithNoSort) {\n                }\n            }\n        };\n    }\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}