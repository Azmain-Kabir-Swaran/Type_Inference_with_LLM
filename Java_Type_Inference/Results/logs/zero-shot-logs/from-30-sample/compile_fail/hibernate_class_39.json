{
    "file": "/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java",
    "java_code": "package hibernate;\nimport java.util.List;\nimport java.io.Serializable;\nimport org.hibernate.SessionFactory;\nimport java.util.Map;\nimport org.hibernate.Transaction;\nimport org.hibernate.Session;\nimport org.springframework.transaction.annotation.Transactional;\n//ID = 3573479\n\npublic class hibernate_class_39 {\n@Transactional\n@SuppressWarnings(\"unchecked\")\npublic class GenericDaoImpl<T, ID extends Serializable> implements\n  GenericDao<T, ID> {\n private SessionFactory sessionFactory;\n\n public void setSessionFactory(final SessionFactory sessionFactory) {\n  this.sessionFactory = sessionFactory;\n }\n\n public ID create(final T newInstance) {\n  ID id = null;\n  final Session session = sessionFactory.openSession();\n  final Transaction tx = session.beginTransaction();\n  try {\n   id = (ID) session.save(newInstance);\n   tx.commit();\n   session.close();\n  } catch (final Exception e) {\n   if (tx != null) {\n    tx.rollback();\n   }\n   e.printStackTrace();\n  } finally {\n   if (session.isOpen()) {\n    session.close();\n   }\n  }\n  return id;\n }\n\n public T read(final ID primaryKey) {\n  T id = null;\n  final Session session = sessionFactory.openSession();\n  final Transaction tx = session.beginTransaction();\n  try {\n   id = (T) session.get(\"aaa\", primaryKey);\n   tx.commit();\n   session.close();\n  } catch (final Exception e) {\n   if (tx != null) {\n    tx.rollback();\n   }\n   e.printStackTrace();\n  } finally {\n   if (session.isOpen()) {\n    session.close();\n   }\n  }\n  return id;\n }\n\n public void update(final T transientObject) {\n  final Session session = sessionFactory.openSession();\n  final Transaction tx = session.beginTransaction();\n  try {\n   session.saveOrUpdate(transientObject);\n   tx.commit();\n   session.close();\n  } catch (final Exception e) {\n   if (tx != null) {\n    tx.rollback();\n   }\n   e.printStackTrace();\n  } finally {\n   if (session.isOpen()) {\n    session.close();\n   }\n  }\n }\n\n public void delete(final T persistentObject) {\n  final Session session = sessionFactory.openSession();\n  final Transaction tx = session.beginTransaction();\n  try {\n   session.delete(persistentObject);\n   tx.commit();\n   session.close();\n  } catch (final Exception e) {\n   if (tx != null) {\n    tx.rollback();\n   }\n   e.printStackTrace();\n  } finally {\n   if (session.isOpen()) {\n    session.close();\n   }\n  }\n }\n\n@Override\npublic boolean exists(ID arg0) {\n\t// TODO Auto-generated method stub\n\treturn false;\n}\n\n@Override\npublic List<T> findByNamedQuery(String arg0, Map<String, Object> arg1) {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n\n@Override\npublic T get(ID arg0) {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n\n@Override\npublic List<T> getAll() {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n\n@Override\npublic List<T> getAllDistinct() {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n\n@Override\npublic void reindex() {\n\t// TODO Auto-generated method stub\n\t\n}\n\n@Override\npublic void reindexAll(boolean arg0) {\n\t// TODO Auto-generated method stub\n\t\n}\n\n@Override\npublic void remove(T arg0) {\n\t// TODO Auto-generated method stub\n\t\n}\n\n@Override\npublic void remove(ID arg0) {\n\t// TODO Auto-generated method stub\n\t\n}\n\n@Override\npublic T save(T arg0) {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n\n@Override\npublic List<T> search(String arg0) throws SearchException {\n\t// TODO Auto-generated method stub\n\treturn null;\n}\n}\n}",
    "stdout": "",
    "stderr": "/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:15: error: cannot find symbol\n  GenericDao<T, ID> {\n  ^\n  symbol:   class GenericDao\n  location: class hibernate_class_39\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:163: error: cannot find symbol\npublic List<T> search(String arg0) throws SearchException {\n                                          ^\n  symbol:   class SearchException\n  location: class hibernate_class_39.GenericDaoImpl<T,ID>\n  where T,ID are type-variables:\n    T extends Object declared in class hibernate_class_39.GenericDaoImpl\n    ID extends Serializable declared in class hibernate_class_39.GenericDaoImpl\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:102: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:108: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:114: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:120: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:126: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:132: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:138: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:144: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:150: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:156: error: method does not override or implement a method from a supertype\n@Override\n^\n/home/azmain/code_for_compilation_test/from-30-sample/hibernate_class_39.java:162: error: method does not override or implement a method from a supertype\n@Override\n^\n13 errors\n",
    "return_code": 1
}