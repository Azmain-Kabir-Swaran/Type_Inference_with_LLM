{
    "file": "/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java",
    "java_code": "package xstream;\nimport com.thoughtworks.xstream.XStream;\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.thoughtworks.xstream.annotations.XStreamImplicit;\nimport com.thoughtworks.xstream.annotations.XStreamAlias;\nimport com.thoughtworks.xstream.mapper.MapperWrapper;\nimport java.util.Iterator;\n//http://www.programcreek.com/java-api-examples/index.php?source_dir=cloudbees-api-client-master/cloudbees-api-client/src/main/java/com/cloudbees/api/config/ConfigParameters.java\n\n\npublic class xstream_class_34 {\n\t@XStreamAlias(\"config\") \n\tpublic class ConfigParameters extends ParameterHolder { \n\t    @XStreamImplicit(itemFieldName = \"resource\") \n\t    private List<ResourceSettings> resources; \n\t \n\t    @XStreamImplicit(itemFieldName = \"env\") \n\t    private List<Environment> environments; \n\t \n\t    public ConfigParameters() { \n\t    } \n\t \n\t    public List<Environment> getEnvironments() { \n\t        if (environments == null) \n\t            environments = new ArrayList<Environment>(); \n\t        return environments; \n\t    } \n\t \n\t    public void setEnvironments(List<Environment> environments) { \n\t        this.environments = environments; \n\t    } \n\t \n\t    public void setEnvironment(Environment environment) { \n\t        deleteEnvironment(environment.getName()); \n\t        getEnvironments().add(environment); \n\t    } \n\t \n\t    public Environment getEnvironment(String env) { \n\t        for (Environment environment: getEnvironments()) { \n\t            if (env.equals(environment.getName())) \n\t                return environment; \n\t        } \n\t        return null; \n\t    } \n\t    public void deleteEnvironment(String name) { \n\t        Iterator<Environment> it = getEnvironments().iterator(); \n\t        while (it.hasNext()) { \n\t            if (it.next().getName().equals(name)) { \n\t                it.remove(); \n\t            } \n\t        } \n\t    } \n\t \n\t \n\t    public List<ResourceSettings> getResources() { \n\t        if (resources == null) \n\t            resources = new ArrayList<ResourceSettings>(); \n\t        return resources; \n\t    } \n\t \n\t    public void setResources(List<ResourceSettings> resources) { \n\t        this.resources = resources; \n\t    } \n\t \n\t    public void setResource(ResourceSettings resource) { \n\t        deleteResource(resource.getName()); \n\t        getResources().add(resource); \n\t    } \n\t \n\t    public ResourceSettings getResource(String name) { \n\t        for (ResourceSettings resource : getResources()) { \n\t            if (resource.getName().equals(name)) \n\t                return resource; \n\t        } \n\t        return null; \n\t    } \n\t    public void deleteResource(String name) { \n\t        Iterator<ResourceSettings> it = getResources().iterator(); \n\t        while (it.hasNext()) { \n\t            if (it.next().getName().equals(name)) { \n\t                it.remove(); \n\t            } \n\t        } \n\t    } \n\t \n\t    private XStream createXStream() { \n\t        XStream xstream = new XStream() { \n\t            protected MapperWrapper wrapMapper(MapperWrapper next) { \n\t                return new MapperWrapper(next) { \n\t                    public boolean shouldSerializeMember(Class definedIn, String fieldName) { \n\t                        return definedIn != Object.class && super.shouldSerializeMember(definedIn, fieldName); \n\t                    } \n\t \n\t                }; \n\t            } \n\t        }; \n\t \n\t        xstream.setClassLoader(ConfigParameters.class.getClassLoader()); \n\t        xstream.processAnnotations(ResourceSettings.class); \n\t        xstream.processAnnotations(Environment.class); \n\t        xstream.processAnnotations(ConfigParameters.class); \n\t        xstream.processAnnotations(ParameterHolder.class); \n\t        return xstream; \n\t    } \n\t \n\t    /**\n\t     * Returns a string representation of XML. \n\t     */ \n\t    public String toXML() { \n\t        return createXStream().toXML(this); \n\t    } \n\t \n\t    public ConfigParameters parse(String xml) { \n\t        if (xml == null) \n\t            return new ConfigParameters(); \n\t        return (ConfigParameters) createXStream().fromXML(xml); \n\t    } \n\t}\n}",
    "stdout": "",
    "stderr": "/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:14: error: cannot find symbol\n\tpublic class ConfigParameters extends ParameterHolder { \n\t                                      ^\n  symbol:   class ParameterHolder\n  location: class xstream_class_34\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:16: error: cannot find symbol\n\t    private List<ResourceSettings> resources; \n\t                 ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:19: error: cannot find symbol\n\t    private List<Environment> environments; \n\t                 ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:24: error: cannot find symbol\n\t    public List<Environment> getEnvironments() { \n\t                ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:30: error: cannot find symbol\n\t    public void setEnvironments(List<Environment> environments) { \n\t                                     ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:34: error: cannot find symbol\n\t    public void setEnvironment(Environment environment) { \n\t                               ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:39: error: cannot find symbol\n\t    public Environment getEnvironment(String env) { \n\t           ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:56: error: cannot find symbol\n\t    public List<ResourceSettings> getResources() { \n\t                ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:62: error: cannot find symbol\n\t    public void setResources(List<ResourceSettings> resources) { \n\t                                  ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:66: error: cannot find symbol\n\t    public void setResource(ResourceSettings resource) { \n\t                            ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:71: error: cannot find symbol\n\t    public ResourceSettings getResource(String name) { \n\t           ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:26: error: cannot find symbol\n\t            environments = new ArrayList<Environment>(); \n\t                                         ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:40: error: cannot find symbol\n\t        for (Environment environment: getEnvironments()) { \n\t             ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:47: error: cannot find symbol\n\t        Iterator<Environment> it = getEnvironments().iterator(); \n\t                 ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:58: error: cannot find symbol\n\t            resources = new ArrayList<ResourceSettings>(); \n\t                                      ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:72: error: cannot find symbol\n\t        for (ResourceSettings resource : getResources()) { \n\t             ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:79: error: cannot find symbol\n\t        Iterator<ResourceSettings> it = getResources().iterator(); \n\t                 ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:100: error: cannot find symbol\n\t        xstream.processAnnotations(ResourceSettings.class); \n\t                                   ^\n  symbol:   class ResourceSettings\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:101: error: cannot find symbol\n\t        xstream.processAnnotations(Environment.class); \n\t                                   ^\n  symbol:   class Environment\n  location: class xstream_class_34.ConfigParameters\n/home/azmain/code_for_compilation_test/from-20-sample/xstream_class_34.java:103: error: cannot find symbol\n\t        xstream.processAnnotations(ParameterHolder.class); \n\t                                   ^\n  symbol:   class ParameterHolder\n  location: class xstream_class_34.ConfigParameters\n20 errors\n",
    "return_code": 1
}