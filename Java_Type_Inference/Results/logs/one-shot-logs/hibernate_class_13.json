{
    "file": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java",
    "java_code": "package hibernate;\nimport java.io.Serializable;\nimport java.util.Collection;\nimport java.util.List;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.ForeignKey;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.JoinTable;\nimport javax.persistence.ManyToMany;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\nimport org.hibernate.annotations.IndexColumn;\nimport library.model.County;\nimport library.model.Permission;\nimport library.model.Version;\n//ID = 1483026\n\n\n@Entity\n@Table(name = \"tblUser\")\npublic class hibernate_class_13 implements Serializable, Cloneable {\n\n    @Id\n    @Column(name = \"CountyId\", nullable = false)\n    private Integer countyId;\n\n    @Id\n    @Column(name = \"Username\", length = 25, nullable = false)\n    private String username;\n\n    @ManyToOne(fetch=FetchType.LAZY)\n    @JoinColumn(name = \"CountyId\", nullable = false, insertable=false, updatable=false)\n    @ForeignKey(name=\"FK_CountyID\")\n//    private County county;\n\n    @Column(name = \"Name\", length = 50, nullable = true)\n    private String name;\n\n    @Column(name = \"Password\", length = 30, nullable = true)\n    private String password;\n\n    @Column(name = \"Role\", nullable = false)\n    private Integer role;\n\n    @ManyToMany(targetEntity=Permission.class,\n         cascade={ CascadeType.PERSIST, CascadeType.MERGE } )\n    @JoinTable(name=\"tblUserPermission\",\n         joinColumns = { @JoinColumn(name=\"Username\", referencedColumnName=\"Username\"), @JoinColumn(name=\"CountyId\", referencedColumnName=\"CountyId\") },\n         inverseJoinColumns = { @JoinColumn(name=\"PermissionId\", referencedColumnName=\"PermissionId\") })\n   private Collection<Permission> permissions;\n\n    @OneToMany(fetch=FetchType.LAZY, mappedBy=\"county\")\n    @IndexColumn(name=\"version\")\n    private List<Version> versions;\n\n    /** Getters and setters **/\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:8: error: cannot find symbol\nimport javax.persistence.ForeignKey;\n                        ^\n  symbol:   class ForeignKey\n  location: package javax.persistence\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:18: error: cannot find symbol\nimport library.model.County;\n                    ^\n  symbol:   class County\n  location: package library.model\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:19: error: cannot find symbol\nimport library.model.Permission;\n                    ^\n  symbol:   class Permission\n  location: package library.model\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:20: error: cannot find symbol\nimport library.model.Version;\n                    ^\n  symbol:   class Version\n  location: package library.model\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:55: error: cannot find symbol\n   private Collection<Permission> permissions;\n                      ^\n  symbol:   class Permission\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:59: error: cannot find symbol\n    private List<Version> versions;\n                 ^\n  symbol:   class Version\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:38: error: cannot find symbol\n    @ForeignKey(name=\"FK_CountyID\")\n     ^\n  symbol:   class ForeignKey\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:50: error: cannot find symbol\n    @ManyToMany(targetEntity=Permission.class,\n                             ^\n  symbol:   class Permission\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:51: error: cannot find symbol\n         cascade={ CascadeType.PERSIST, CascadeType.MERGE } )\n                   ^\n  symbol:   variable CascadeType\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:51: error: an enum annotation value must be an enum constant\n         cascade={ CascadeType.PERSIST, CascadeType.MERGE } )\n                              ^\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:51: error: cannot find symbol\n         cascade={ CascadeType.PERSIST, CascadeType.MERGE } )\n                                        ^\n  symbol:   variable CascadeType\n  location: class hibernate_class_13\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_13.java:51: error: an enum annotation value must be an enum constant\n         cascade={ CascadeType.PERSIST, CascadeType.MERGE } )\n                                                   ^\n12 errors\n",
    "return_code": 1
}