{
    "file": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/Class_21.java",
    "java_code": "/*\nDate: 1/19/17\nURL: http://stackoverflow.com/questions/5853879/swing-obtain-image-of-jframe\n*/\npackage common_JDK;\nimport java.awt.BorderLayout;\nimport java.awt.Component;\nimport java.awt.Image;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.InputEvent;\nimport java.awt.event.KeyEvent;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport javax.imageio.ImageIO;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTree;\nimport javax.swing.KeyStroke;\nimport javax.swing.SwingUtilities;\nimport javax.swing.border.TitledBorder;\n\n/**\nCreate a screenshot of a component.\n@author Andrew Thompson\n*/\nclass ComponentImageCapture {\n\n  static final String HELP =\n    \"Type Ctrl-0 to get a screenshot of the current GUI.\\n\" +\n    \"The screenshot will be saved to the current \" +\n    \"directory as 'screenshot.png'.\";\n\n  public static BufferedImage getScreenShot(\n    Component component) {\n\n    BufferedImage image = new BufferedImage(\n      component.getWidth(),\n      component.getHeight(),\n      BufferedImage.TYPE_INT_RGB\n      );\n    // call the Component's paint method, using\n    // the Graphics object of the image.\n    component.paint( image.getGraphics() ); // alternately use .printAll(..)\n    return image;\n  }\n\n  public static void main(String[] args) {\n    Runnable r = new Runnable() {\n      public void run() {\n        final JFrame f = new JFrame(\"Test Screenshot\");\n\n        JMenuItem screenshot =\n          new JMenuItem(\"Screenshot\");\n        screenshot.setAccelerator(\n          KeyStroke.getKeyStroke(\n            KeyEvent.VK_0,\n            InputEvent.CTRL_DOWN_MASK\n          ));\n        screenshot.addActionListener(\n          new ActionListener(){\n            public void actionPerformed(ActionEvent ae) {\n              BufferedImage img = getScreenShot(\n                f.getContentPane() );\n              JOptionPane.showMessageDialog(\n                null,\n                new JLabel(\n                  new ImageIcon(\n                    img.getScaledInstance(\n                      img.getWidth(null)/2,\n                      img.getHeight(null)/2,\n                      Image.SCALE_SMOOTH )\n                    )));\n              try {\n                // write the image as a PNG\n                ImageIO.write(\n                  img,\n                  \"png\",\n                  new File(\"screenshot.png\"));\n              } catch(Exception e) {\n                e.printStackTrace();\n              }\n            }\n          } );\n        JMenu menu = new JMenu(\"Other\");\n        menu.add(screenshot);\n        JMenuBar mb = new JMenuBar();\n        mb.add(menu);\n        f.setJMenuBar(mb);\n\n        JPanel p = new JPanel( new BorderLayout(5,5) );\n        p.setBorder( new TitledBorder(\"Main GUI\") );\n        p.add( new JScrollPane(new JTree()),\n          BorderLayout.WEST );\n        p.add( new JScrollPane( new JTextArea(HELP,10,30) ),\n          BorderLayout.CENTER );\n\n        f.setContentPane( p );\n        f.pack();\n        f.setLocationRelativeTo(null);\n        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        f.setVisible(true);\n      }\n    };\n    SwingUtilities.invokeLater(r);\n  }\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}