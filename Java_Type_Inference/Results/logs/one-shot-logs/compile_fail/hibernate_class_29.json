{
    "file": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_29.java",
    "java_code": "package hibernate;\nimport org.hibernate.Criteria;\nimport org.hibernate.criterion.Projections;\nimport org.hibernate.SessionFactory;\n//ID = 3184069\n\n\npublic abstract class hibernate_class_29<T>{\n\n  private Class<T> domainClass;\n\n  private SessionFactory sf;\n\n  public hibernate_class_29(Class<T> domainClass) {\n    this.domainClass = domainClass;\n  }\n\n  public SessionFactory getSessionFactory() {\n    return sf;\n  }\n\n  public void setSessionFactory(SessionFactory sf) {\n    this.sf = sf;\n  }\n\n  public void delete(T object) {\n    getSession().delete(object);\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  public T load(long id) {\n    return (T) getSession().get(domainClass, id);\n  }\n\n  public void save(T object) {\n    getSession().saveOrUpdate(object);\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  public List<T> findAll() {\n    Criteria criteria = getSession().createCriteria(domainClass);\n    List<T> r=(List<T>) criteria.list();\n    return r;\n  }\n\n  public int countAll() {\n    Criteria criteria = getSession().createCriteria(domainClass);\n    criteria.setProjection(Projections.rowCount());\n    return (Integer) criteria.uniqueResult();\n  }\n\n  public Session getSession() {\n    // presumes a current session, which we have through the\n    // OpenSessionInViewFilter; doesn't work without that\n    return sf.getCurrentSession();\n  }\n}",
    "stdout": "",
    "stderr": "/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_29.java:40: error: cannot find symbol\n  public List<T> findAll() {\n         ^\n  symbol:   class List\n  location: class hibernate_class_29<T>\n  where T is a type-variable:\n    T extends Object declared in class hibernate_class_29\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_29.java:52: error: cannot find symbol\n  public Session getSession() {\n         ^\n  symbol:   class Session\n  location: class hibernate_class_29<T>\n  where T is a type-variable:\n    T extends Object declared in class hibernate_class_29\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_29.java:42: error: cannot find symbol\n    List<T> r=(List<T>) criteria.list();\n    ^\n  symbol:   class List\n  location: class hibernate_class_29<T>\n  where T is a type-variable:\n    T extends Object declared in class hibernate_class_29\n/home/azmain/GitHub Codes/Type_Inference_with_LLM/Java_Type_Inference/snippets_for_test/all-one-shot/hibernate_class_29.java:42: error: cannot find symbol\n    List<T> r=(List<T>) criteria.list();\n               ^\n  symbol:   class List\n  location: class hibernate_class_29<T>\n  where T is a type-variable:\n    T extends Object declared in class hibernate_class_29\n4 errors\n",
    "return_code": 1
}