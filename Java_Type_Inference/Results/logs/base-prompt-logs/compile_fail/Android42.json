{
    "file": "/home/azmain/code_for_compilation_test/base-prompt/Android42.java",
    "java_code": "import android.app.Activity;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.graphics.PixelFormat;\nimport android.media.MediaPlayer;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.SurfaceHolder;\nimport android.view.View;\nimport android.webkit.URLUtil;\nimport android.widget.Button;\nimport android.widget.MediaController;\nimport android.widget.VideoView;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.graphics.PixelFormat;\nimport android.media.MediaPlayer;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.SurfaceHolder;\nimport android.view.View;\nimport android.webkit.URLUtil;\nimport android.widget.Button;\nimport android.widget.MediaController;\nimport android.widget.VideoView;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class Android42 extends Activity implements MediaPlayer.OnErrorListener,\n        MediaPlayer.OnBufferingUpdateListener,\n        MediaPlayer.OnCompletionListener, MediaPlayer.OnPreparedListener, SurfaceHolder.Callback {\n\n    private static final String TAG = \"MediaPreview\";\n\n    private MediaPlayer mp;\n    private SurfaceView mPreview;\n    private SurfaceHolder holder;\n    private Button btnPlay;\n    private Button btnPause;\n    private Button btnReset;\n    private Button btnStop;\n\n    private String mPath;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.media_preview);\n\n        mPreview = (SurfaceView) findViewById(R.id.myImage);\n        btnPlay = (Button) findViewById(100);\n        btnPause = (Button) findViewById(101);\n        btnReset = (Button) findViewById(102);\n        btnStop = (Button) findViewById(103);\n\n        getPathFromParentDialog();\n\n        btnPlay.setOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                playVideo();\n            }\n        });\n\n        btnPause.setOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                if (mp != null) {\n                    mp.pause();\n                }\n            }\n        });\n\n        btnReset.setOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                if (mp != null) {\n                    mp.seekTo(0);\n                }\n            }\n        });\n\n        btnStop.setOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                if (mp != null) {\n                    mp.stop();\n                    mp.release();\n                }\n            }\n        });\n\n        getWindow().setFormat(PixelFormat.TRANSPARENT);\n        holder = mPreview.getHolder();\n        holder.addCallback(this);\n        holder.setFixedSize(400, 300);\n    }\n\n    @Override\n    protected void onResume() {\n\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n        super.onResume();\n    }\n\n    @Override\n    public boolean onError(MediaPlayer mp, int what, int extra) {\n        if (mp != null) {\n            mp.stop();\n            mp.release();\n        }\n        return false;\n    }\n\n    @Override\n    public void onBufferingUpdate(MediaPlayer mp, int percent) {\n\n    }\n\n    @Override\n    public void onCompletion(MediaPlayer mp) {\n\n    }\n\n    @Override\n    public void onPrepared(MediaPlayer mp) {\n\n    }\n\n    @Override\n    public void surfaceChanged(SurfaceHolder holder, int format, int width,\n                               int height) {\n\n    }\n\n    @Override\n    public void surfaceCreated(SurfaceHolder holder) {\n\n    }\n\n    @Override\n    public void surfaceDestroyed(SurfaceHolder holder) {\n\n    }\n\n    private void playVideo() {\n        try {\n            mp = new MediaPlayer();\n            mp.setOnErrorListener(this);\n            mp.setOnBufferingUpdateListener(this);\n            mp.setOnCompletionListener(this);\n            mp.setOnPreparedListener(this);\n            mp.setAudioStreamType(2);\n\n            mp.setDisplay(mPreview.getHolder());\n            Runnable r = new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        setDataSource(mPath);\n                    } catch (Exception ex) {\n                        Log.e(TAG, ex.getMessage());\n                    }\n                    try {\n                        mp.prepare();\n                        Log.v(TAG, \"Duration: ===> \" + mp.getDuration());\n                    } catch (IllegalStateException e) {\n                        e.printStackTrace();\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                        Log.e(TAG, e.getMessage());\n                    }\n                    mp.start();\n                }\n\n            };\n            new Thread(r).start();\n        } catch (Exception ex) {\n            String sDummy = ex.toString();\n            if (mp != null) {\n                mp.stop();\n                mp.release();\n            }\n        }\n\n    }\n\n    private void setDataSource(String path) throws IOException {\n        if (!URLUtil.isNetworkUrl(mPath)) {\n            mp.setDataSource(mPath);\n        } else {\n            URL url = new URL(mPath);\n            URLConnection cn = url.openConnection();\n            cn.connect();\n            InputStream stream = cn.getInputStream();\n            if (stream == null) {\n                throw new RuntimeException(\"stream is null\");\n            }\n            File fileTemp = File.createTempFile(\"mediaplayerTmp\", \"dat\");\n            String tempPath = fileTemp.getAbsolutePath();\n            FileOutputStream out = new FileOutputStream(fileTemp);\n            byte buf[] = new byte[128];\n            do {\n                int numRead = stream.read(buf);\n                if (numRead <= 0) {\n                    break;\n                }\n                out.write(buf, 0, numRead);\n            } while (true);\n            mp.setDataSource(tempPath);\n            try {\n                stream.close();\n            } catch (Exception ex) {\n                String sDummy = ex.toString();\n            }\n        }\n    }\n\n    private void getPathFromParentDialog() {\n        Intent intent = getIntent();\n        mPath = intent.getExtras().getString(\"Path\");\n    }\n}",
    "stdout": "",
    "stderr": "/home/azmain/code_for_compilation_test/base-prompt/Android42.java:50: error: cannot find symbol\n    private SurfaceView mPreview;\n            ^\n  symbol:   class SurfaceView\n  location: class Android42\n/home/azmain/code_for_compilation_test/base-prompt/Android42.java:63: error: package R does not exist\n        setContentView(R.layout.media_preview);\n                        ^\n/home/azmain/code_for_compilation_test/base-prompt/Android42.java:65: error: cannot find symbol\n        mPreview = (SurfaceView) findViewById(R.id.myImage);\n                    ^\n  symbol:   class SurfaceView\n  location: class Android42\n/home/azmain/code_for_compilation_test/base-prompt/Android42.java:65: error: package R does not exist\n        mPreview = (SurfaceView) findViewById(R.id.myImage);\n                                               ^\n4 errors\n",
    "return_code": 1
}