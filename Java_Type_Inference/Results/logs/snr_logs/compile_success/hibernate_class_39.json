{
    "file": "/home/azmain/snr_fixed/hibernate_class_39.java",
    "java_code": "package hibernate;\n//ID = 3573479\n\nimport java.util.Map;\nimport org.appfuse.dao.GenericDao;\nimport java.util.List;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.appfuse.dao.SearchException;\nimport org.springframework.transaction.annotation.Transactional;\nimport java.io.Serializable;\nimport org.hibernate.Transaction;\n\npublic class hibernate_class_39 {\n\t@Transactional\n\t@SuppressWarnings(\"unchecked\")\n\tpublic class GenericDaoImpl<T, ID extends Serializable> implements GenericDao<T, ID> {\n\t\tprivate SessionFactory sessionFactory;\n\n\t\tpublic void setSessionFactory(final SessionFactory sessionFactory) {\n\t\t\tthis.sessionFactory = sessionFactory;\n\t\t}\n\n\t\tpublic ID create(final T newInstance) {\n\t\t\tID id = null;\n\t\t\tfinal Session session = sessionFactory.openSession();\n\t\t\tfinal Transaction tx = session.beginTransaction();\n\t\t\ttry {\n\t\t\t\tid = (ID) session.save(newInstance);\n\t\t\t\ttx.commit();\n\t\t\t\tsession.close();\n\t\t\t} catch (final Exception e) {\n\t\t\t\tif (tx != null) {\n\t\t\t\t\ttx.rollback();\n\t\t\t\t}\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tif (session.isOpen()) {\n\t\t\t\t\tsession.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic T read(final ID primaryKey) {\n\t\t\tT id = null;\n\t\t\tfinal Session session = sessionFactory.openSession();\n\t\t\tfinal Transaction tx = session.beginTransaction();\n\t\t\ttry {\n\t\t\t\tid = (T) session.get(\"aaa\", primaryKey);\n\t\t\t\ttx.commit();\n\t\t\t\tsession.close();\n\t\t\t} catch (final Exception e) {\n\t\t\t\tif (tx != null) {\n\t\t\t\t\ttx.rollback();\n\t\t\t\t}\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tif (session.isOpen()) {\n\t\t\t\t\tsession.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic void update(final T transientObject) {\n\t\t\tfinal Session session = sessionFactory.openSession();\n\t\t\tfinal Transaction tx = session.beginTransaction();\n\t\t\ttry {\n\t\t\t\tsession.saveOrUpdate(transientObject);\n\t\t\t\ttx.commit();\n\t\t\t\tsession.close();\n\t\t\t} catch (final Exception e) {\n\t\t\t\tif (tx != null) {\n\t\t\t\t\ttx.rollback();\n\t\t\t\t}\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tif (session.isOpen()) {\n\t\t\t\t\tsession.close();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic void delete(final T persistentObject) {\n\t\t\tfinal Session session = sessionFactory.openSession();\n\t\t\tfinal Transaction tx = session.beginTransaction();\n\t\t\ttry {\n\t\t\t\tsession.delete(persistentObject);\n\t\t\t\ttx.commit();\n\t\t\t\tsession.close();\n\t\t\t} catch (final Exception e) {\n\t\t\t\tif (tx != null) {\n\t\t\t\t\ttx.rollback();\n\t\t\t\t}\n\t\t\t\te.printStackTrace();\n\t\t\t} finally {\n\t\t\t\tif (session.isOpen()) {\n\t\t\t\t\tsession.close();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean exists(ID arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn false;\n\t\t}\n\n\t\t@Override\n\t\tpublic List<T> findByNamedQuery(String arg0, Map<String, Object> arg1) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic T get(ID arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic List<T> getAll() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic List<T> getAllDistinct() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic void reindex() {\n\t\t\t// TODO Auto-generated method stub\n\n\t\t}\n\n\t\t@Override\n\t\tpublic void reindexAll(boolean arg0) {\n\t\t\t// TODO Auto-generated method stub\n\n\t\t}\n\n\t\t@Override\n\t\tpublic void remove(T arg0) {\n\t\t\t// TODO Auto-generated method stub\n\n\t\t}\n\n\t\t@Override\n\t\tpublic void remove(ID arg0) {\n\t\t\t// TODO Auto-generated method stub\n\n\t\t}\n\n\t\t@Override\n\t\tpublic T save(T arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\n\t\t@Override\n\t\tpublic List<T> search(String arg0) throws SearchException {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}