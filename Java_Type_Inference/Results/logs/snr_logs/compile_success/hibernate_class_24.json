{
    "file": "/home/azmain/snr_fixed/hibernate_class_24.java",
    "java_code": "package hibernate;\n//ID = 2768511\n\nimport org.hibernate.cfg.Configuration;\nimport java.lang.reflect.InvocationHandler;\nimport org.hibernate.SessionFactory;\nimport java.lang.reflect.Method;\n\npublic class hibernate_class_24 {\n\tpublic static class HibernateInvocationHandler implements InvocationHandler {\n\t\tfinal private Configuration config;\n\t\tprivate SessionFactory realSessionFactory;\n\n\t\tpublic HibernateInvocationHandler(Configuration config) {\n\t\t\tthis.config = config;\n\t\t}\n\n\t\tpublic Object invoke1(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\tif (false)\n\t\t\t\tproxy.hashCode();\n\t\t\tSystem.out.println(\"Proxy for SessionFactory called\");\n\t\t\tsynchronized (this) {\n\t\t\t\tif (this.realSessionFactory == null) {\n\t\t\t\t\tSessionFactory sf = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tSystem.out.println(\"Gonna BUILD one or die trying\");\n\n\t\t\t\t\t\tsf = this.config.buildSessionFactory();\n\t\t\t\t\t} catch (RuntimeException e) {\n\t\t\t\t\t\t//\t                        System.out.println(ErrorHandle.exceptionToString(e));\n\t\t\t\t\t\t//\t                        log.error(\"SessionFactoryProxy\",e);\n\t\t\t\t\t\t//\t                        closeSessionFactory(sf);\n\t\t\t\t\t\tSystem.out.println(\"FAILED to build\");\n\t\t\t\t\t\tsf = null;\n\t\t\t\t\t}\n\t\t\t\t\t//\t                    if (sf==null) throw new RetainConfigDataAccessException(\"SessionFactory not available\");\n\t\t\t\t\tthis.realSessionFactory = sf;\n\t\t\t\t}\n\t\t\t\treturn method.invoke(this.realSessionFactory, args);\n\t\t\t}\n\n\t\t}\n\n\t\t@Override\n\t\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}