{
    "file": "/home/azmain/snr_fixed/xstream_class_35.java",
    "java_code": "package xstream;\n//http://www.programcreek.com/java-api-examples/index.php?source_dir=sandboxes-master/sandbox-xstream/src/test/java/tryanderror/xstream/EntsoeStyleConverter_Test.java\n\nimport com.thoughtworks.xstream.converters.SingleValueConverter;\nimport com.thoughtworks.xstream.XStream;\nimport com.thoughtworks.xstream.mapper.MapperWrapper;\nimport com.thoughtworks.xstream.converters.Converter;\nimport com.thoughtworks.xstream.converters.ConverterLookup;\nimport com.thoughtworks.xstream.mapper.Mapper;\nimport com.thoughtworks.xstream.converters.reflection.ReflectionProvider;\nimport org.junit.Test;\n\npublic class xstream_class_35 {\n\n\tpublic static class AClass {\n\t\tpublic String value = \"This should be in an attribute\";\n\t\tpublic CompositeClass anotherValue = new CompositeClass();\n\t}\n\n\tpublic static class CompositeClass {\n\t\tpublic Integer value = 42;\n\t}\n\n\tpublic static class ToSingleValue implements SingleValueConverter {\n\n\t\t@Override\n\t\tpublic boolean canConvert(Class type) {\n\t\t\treturn CompositeClass.class == type;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString(Object obj) {\n\t\t\tCompositeClass cCompositeClass = (CompositeClass) obj;\n\t\t\treturn cCompositeClass.value.toString();\n\t\t}\n\n\t\t@Override\n\t\tpublic Object fromString(String str) {\n\t\t\treturn new CompositeClass();\n\t\t}\n\n\t}\n\n\t@Test\n\tpublic void testName() throws Exception {\n\t\tXStream xStream = new XStream();\n\t\txStream.registerConverter(new ToSingleValue());\n\n\t\tMapper mapper = xStream.getMapper();\n\t\tReflectionProvider reflectionProvider = xStream.getReflectionProvider();\n\t\tConverterLookup converterLookup = xStream.getConverterLookup();\n\t\tString valueField = null;\n\t\tConverter converter = null;\n\t\txStream.registerConverter(converter);\n\t\tSystem.out.println(xStream.toXML(new AClass()));\n\t}\n\n\tprotected MapperWrapper wrapMapper(MapperWrapper next) {\n\t\treturn next;\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}