{
    "file": "/home/azmain/snr_fixed/hibernate_class_29.java",
    "java_code": "package hibernate;\n//ID = 3184069\n\nimport java.util.List;\nimport org.hibernate.Criteria;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.hibernate.criterion.Projections;\n\npublic abstract class hibernate_class_29<T> {\n\n\tprivate Class<T> domainClass;\n\n\tprivate SessionFactory sf;\n\n\tpublic hibernate_class_29(Class<T> domainClass) {\n\t\tthis.domainClass = domainClass;\n\t}\n\n\tpublic SessionFactory getSessionFactory() {\n\t\treturn sf;\n\t}\n\n\tpublic void setSessionFactory(SessionFactory sf) {\n\t\tthis.sf = sf;\n\t}\n\n\tpublic void delete(T object) {\n\t\tgetSession().delete(object);\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic T load(long id) {\n\t\treturn (T) getSession().get(domainClass, id);\n\t}\n\n\tpublic void save(T object) {\n\t\tgetSession().saveOrUpdate(object);\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic List<T> findAll() {\n\t\tCriteria criteria = getSession().createCriteria(domainClass);\n\t\tList<T> r = (List<T>) criteria.list();\n\t\treturn r;\n\t}\n\n\tpublic int countAll() {\n\t\tCriteria criteria = getSession().createCriteria(domainClass);\n\t\tcriteria.setProjection(Projections.rowCount());\n\t\treturn (Integer) criteria.uniqueResult();\n\t}\n\n\tpublic Session getSession() {\n\t\t// presumes a current session, which we have through the\n\t\t// OpenSessionInViewFilter; doesn't work without that\n\t\treturn sf.getCurrentSession();\n\t}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}