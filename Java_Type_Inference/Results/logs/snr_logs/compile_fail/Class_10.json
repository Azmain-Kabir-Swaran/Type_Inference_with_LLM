{
    "file": "/home/azmain/snr_fixed/Class_10.java",
    "java_code": "package common_JDK;\n/*\n\nDate: 1/19/17\nURL: http://stackoverflow.com/questions/85190/how-does-the-java-for-each-loop-work\n*/\n\nimport java.util.Locale;\n\n/**\n   &lt;P&gt;{@code java TimeIteratorVsIndexIntArray 1000000}&lt;/P&gt;\n\n   @see  &lt;CODE&gt;&lt;A HREF=&quot;http://stackoverflow.com/questions/180158/how-do-i-time-a-methods-execution-in-java&quot;&gt;http://stackoverflow.com/questions/180158/how-do-i-time-a-methods-execution-in-java&lt;/A&gt;&lt;/CODE&gt;\n **/\npublic class Class_10 {\n\tpublic static final NumberFormat nf = NumberFormat.getNumberInstance(Locale.US);\n\n\tpublic static final void main(String[] tryCount_inParamIdx0) {\n\t\tint testCount;\n\t\t//Get try-count from command-line parameter\n\t\ttry {\n\t\t\ttestCount = Integer.parseInt(tryCount_inParamIdx0[0]);\n\t\t} catch (ArrayIndexOutOfBoundsException | NumberFormatException x) {\n\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\"Missing or invalid command line parameter: The number of testCount for each test. \" + x);\n\t\t}\n\n\t\t//Test proper...START\n\t\tint[] intArray = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n\t\t\t\t24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\n\t\t\t\t50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\n\t\t\t\t76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 };\n\n\t\tlong lStart = System.nanoTime();\n\t\tfor (int i = 0; i < testCount; i++) {\n\t\t\ttestIterator(intArray);\n\t\t}\n\t\tlong lADuration = outputGetNanoDuration(\"A\", lStart);\n\n\t\tlStart = System.nanoTime();\n\t\tfor (int i = 0; i < testCount; i++) {\n\t\t\ttestFor(intArray);\n\t\t}\n\t\tlong lBDuration = outputGetNanoDuration(\"B\", lStart);\n\n\t\toutputGetABTestNanoDifference(lADuration, lBDuration, \"A\", \"B\");\n\t}\n\n\tprivate static final void testIterator(int[] int_array) {\n\t\tint total = 0;\n\t\tfor (int i = 0; i < int_array.length; i++) {\n\t\t\ttotal += int_array[i];\n\t\t}\n\t}\n\n\tprivate static final void testFor(int[] int_array) {\n\t\tint total = 0;\n\t\tfor (int i : int_array) {\n\t\t\ttotal += i;\n\t\t}\n\t}\n\t//Test proper...END\n\n\t//Timer testing utilities...START\n\tpublic static final long outputGetNanoDuration(String s_testName, long l_nanoStart) {\n\t\tlong lDuration = System.nanoTime() - l_nanoStart;\n\t\tSystem.out.println(\"Test \" + s_testName + \": \" + nf.format(lDuration) + \" nanoseconds\");\n\t\treturn lDuration;\n\t}\n\n\tpublic static final long outputGetABTestNanoDifference(long l_aDuration, long l_bDuration, String s_aTestName,\n\t\t\tString s_bTestName) {\n\t\tlong lDiff = -1;\n\t\tdouble dPct = -1.0;\n\t\tString sFaster = null;\n\t\tif (l_aDuration > l_bDuration) {\n\t\t\tlDiff = l_aDuration - l_bDuration;\n\t\t\tdPct = 100.00 - (l_bDuration * 100.0 / l_aDuration + 0.5);\n\t\t\tsFaster = \"B\";\n\t\t} else {\n\t\t\tlDiff = l_bDuration - l_aDuration;\n\t\t\tdPct = 100.00 - (l_aDuration * 100.0 / l_bDuration + 0.5);\n\t\t\tsFaster = \"A\";\n\t\t}\n\t\tSystem.out.println(sFaster + \" faster by \" + nf.format(lDiff) + \" nanoseconds (\" + dPct + \"% faster)\");\n\t\treturn lDiff;\n\t}\n\t//Timer testing utilities...END\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/Class_10.java:16: error: cannot find symbol\n\tpublic static final NumberFormat nf = NumberFormat.getNumberInstance(Locale.US);\n\t                    ^\n  symbol:   class NumberFormat\n  location: class Class_10\n/home/azmain/snr_fixed/Class_10.java:16: error: cannot find symbol\n\tpublic static final NumberFormat nf = NumberFormat.getNumberInstance(Locale.US);\n\t                                      ^\n  symbol:   variable NumberFormat\n  location: class Class_10\n2 errors\n",
    "return_code": 1
}