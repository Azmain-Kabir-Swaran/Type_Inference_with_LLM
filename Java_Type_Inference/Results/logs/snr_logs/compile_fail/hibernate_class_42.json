{
    "file": "/home/azmain/snr_fixed/hibernate_class_42.java",
    "java_code": "package hibernate;\n//ID = 3754253\n\nimport javax.naming.InitialContext;\nimport java.util.List;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.commons.logging.Log;\nimport org.hibernate.SessionFactory;\n\npublic class hibernate_class_42 {\n\n\tprivate static final Log log = LogFactory.getLog(hibernate_class_42.class);\n\n\tprivate final SessionFactory sessionFactory = getSessionFactory();\n\n\tprotected SessionFactory getSessionFactory() {\n\t\ttry {\n\t\t\treturn (SessionFactory) new InitialContext().lookup(\"java:/hibernate/SessionFactory\");\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Could not locate SessionFactory in JNDI\", e);\n\t\t\tthrow new IllegalStateException(\"Could not locate SessionFactory in JNDI\");\n\t\t}\n\t}\n\n\tpublic void persist() {\n\t\tlog.debug(\"persisting Empleados instance\");\n\t\ttry {\n\t\t\tsessionFactory.getCurrentSession().persist(\"aa\");\n\t\t\tlog.debug(\"persist successful\");\n\t\t} catch (RuntimeException re) {\n\t\t\tlog.error(\"persist failed\", re);\n\t\t\tthrow re;\n\t\t}\n\t}\n\n\tpublic void attachDirty() {\n\t\tlog.debug(\"attaching dirty Empleados instance\");\n\t\ttry {\n\t\t\tsessionFactory.getCurrentSession().saveOrUpdate(\"aa\");\n\t\t\tlog.debug(\"attach successful\");\n\t\t} catch (RuntimeException re) {\n\t\t\tlog.error(\"attach failed\", re);\n\t\t\tthrow re;\n\t\t}\n\t}\n\n\tpublic void attachClean() {\n\t\tlog.debug(\"attaching clean Empleados instance\");\n\t\ttry {\n\t\t\tsessionFactory.getCurrentSession().lock(\"aa\", sessionFactory, null);\n\t\t\tlog.debug(\"attach successful\");\n\t\t} catch (RuntimeException re) {\n\t\t\tlog.error(\"attach failed\", re);\n\t\t\tthrow re;\n\t\t}\n\t}\n\n\tpublic void delete() {\n\t\tlog.debug(\"deleting Empleados instance\");\n\t\ttry {\n\t\t\tsessionFactory.getCurrentSession().delete(\"aa\");\n\t\t\tlog.debug(\"delete successful\");\n\t\t} catch (RuntimeException re) {\n\t\t\tlog.error(\"delete failed\", re);\n\t\t\tthrow re;\n\t\t}\n\t}\n\n\t//    public Empleados merge(Empleados detachedInstance) {\n\t//        log.debug(\"merging Empleados instance\");\n\t//        try {\n\t//            Empleados result = (Empleados) sessionFactory.getCurrentSession()\n\t//                    .merge(detachedInstance);\n\t//            log.debug(\"merge successful\");\n\t//            return result;\n\t//        } catch (RuntimeException re) {\n\t//            log.error(\"merge failed\", re);\n\t//            throw re;\n\t//        }\n\t//    }\n\t//\n\t//    public Empleados findById(java.lang.Integer id) {\n\t//        log.debug(\"getting Empleados instance with id: \" + id);\n\t//        try {\n\t//            Empleados instance = (Empleados) sessionFactory.getCurrentSession()\n\t//                    .get(\"com.hibernate.Empleados\", id);\n\t//            if (instance == null) {\n\t//                log.debug(\"get successful, no instance found\");\n\t//            } else {\n\t//                log.debug(\"get successful, instance found\");\n\t//            }\n\t//            return instance;\n\t//        } catch (RuntimeException re) {\n\t//            log.error(\"get failed\", re);\n\t//            throw re;\n\t//        }\n\t//    }\n\n\tpublic List findByExample() {\n\t\tlog.debug(\"finding Empleados instance by example\");\n\t\ttry {\n\t\t\tObject instance = null;\n\t\t\tList results = sessionFactory.getCurrentSession().createCriteria(\"com.hibernate.Empleados\")\n\t\t\t\t\t.add(Example.create(instance)).list();\n\t\t\tlog.debug(\"find by example successful, result size: \" + results.size());\n\t\t\treturn results;\n\t\t} catch (RuntimeException re) {\n\t\t\tlog.error(\"find by example failed\", re);\n\t\t\tthrow re;\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/hibernate_class_42.java:104: error: cannot find symbol\n\t\t\t\t\t.add(Example.create(instance)).list();\n\t\t\t\t\t     ^\n  symbol:   variable Example\n  location: class hibernate_class_42\nNote: /home/azmain/snr_fixed/hibernate_class_42.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n1 error\n",
    "return_code": 1
}