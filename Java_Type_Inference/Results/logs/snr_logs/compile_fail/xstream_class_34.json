{
    "file": "/home/azmain/snr_fixed/xstream_class_34.java",
    "java_code": "package xstream;\n//http://www.programcreek.com/java-api-examples/index.php?source_dir=cloudbees-api-client-master/cloudbees-api-client/src/main/java/com/cloudbees/api/config/ConfigParameters.java\n\nimport com.thoughtworks.xstream.annotations.XStreamImplicit;\nimport java.util.List;\nimport com.thoughtworks.xstream.XStream;\nimport com.thoughtworks.xstream.mapper.MapperWrapper;\nimport com.thoughtworks.xstream.annotations.XStreamAlias;\nimport java.util.Iterator;\nimport com.cloudbees.api.config.ResourceSettings;\nimport com.cloudbees.api.config.Environment;\nimport java.util.ArrayList;\n\npublic class xstream_class_34 {\n\t@XStreamAlias(\"config\")\n\tpublic class ConfigParameters extends ParameterHolder {\n\t\t@XStreamImplicit(itemFieldName = \"resource\")\n\t\tprivate List<ResourceSettings> resources;\n\n\t\t@XStreamImplicit(itemFieldName = \"env\")\n\t\tprivate List<Environment> environments;\n\n\t\tpublic ConfigParameters() {\n\t\t}\n\n\t\tpublic List<Environment> getEnvironments() {\n\t\t\tif (environments == null)\n\t\t\t\tenvironments = new ArrayList<Environment>();\n\t\t\treturn environments;\n\t\t}\n\n\t\tpublic void setEnvironments(List<Environment> environments) {\n\t\t\tthis.environments = environments;\n\t\t}\n\n\t\tpublic void setEnvironment(Environment environment) {\n\t\t\tdeleteEnvironment(environment.getName());\n\t\t\tgetEnvironments().add(environment);\n\t\t}\n\n\t\tpublic Environment getEnvironment(String env) {\n\t\t\tfor (Environment environment : getEnvironments()) {\n\t\t\t\tif (env.equals(environment.getName()))\n\t\t\t\t\treturn environment;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic void deleteEnvironment(String name) {\n\t\t\tIterator<Environment> it = getEnvironments().iterator();\n\t\t\twhile (it.hasNext()) {\n\t\t\t\tif (it.next().getName().equals(name)) {\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic List<ResourceSettings> getResources() {\n\t\t\tif (resources == null)\n\t\t\t\tresources = new ArrayList<ResourceSettings>();\n\t\t\treturn resources;\n\t\t}\n\n\t\tpublic void setResources(List<ResourceSettings> resources) {\n\t\t\tthis.resources = resources;\n\t\t}\n\n\t\tpublic void setResource(ResourceSettings resource) {\n\t\t\tdeleteResource(resource.getName());\n\t\t\tgetResources().add(resource);\n\t\t}\n\n\t\tpublic ResourceSettings getResource(String name) {\n\t\t\tfor (ResourceSettings resource : getResources()) {\n\t\t\t\tif (resource.getName().equals(name))\n\t\t\t\t\treturn resource;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic void deleteResource(String name) {\n\t\t\tIterator<ResourceSettings> it = getResources().iterator();\n\t\t\twhile (it.hasNext()) {\n\t\t\t\tif (it.next().getName().equals(name)) {\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate XStream createXStream() {\n\t\t\tXStream xstream = new XStream() {\n\t\t\t\tprotected MapperWrapper wrapMapper(MapperWrapper next) {\n\t\t\t\t\treturn new MapperWrapper(next) {\n\t\t\t\t\t\tpublic boolean shouldSerializeMember(Class definedIn, String fieldName) {\n\t\t\t\t\t\t\treturn definedIn != Object.class && super.shouldSerializeMember(definedIn, fieldName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txstream.setClassLoader(ConfigParameters.class.getClassLoader());\n\t\t\txstream.processAnnotations(ResourceSettings.class);\n\t\t\txstream.processAnnotations(Environment.class);\n\t\t\txstream.processAnnotations(ConfigParameters.class);\n\t\t\txstream.processAnnotations(ParameterHolder.class);\n\t\t\treturn xstream;\n\t\t}\n\n\t\t/**\n\t\t * Returns a string representation of XML. \n\t\t */\n\t\tpublic String toXML() {\n\t\t\treturn createXStream().toXML(this);\n\t\t}\n\n\t\tpublic ConfigParameters parse(String xml) {\n\t\t\tif (xml == null)\n\t\t\t\treturn new ConfigParameters();\n\t\t\treturn (ConfigParameters) createXStream().fromXML(xml);\n\t\t}\n\t}\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/xstream_class_34.java:16: error: cannot find symbol\n\tpublic class ConfigParameters extends ParameterHolder {\n\t                                      ^\n  symbol:   class ParameterHolder\n  location: class xstream_class_34\n/home/azmain/snr_fixed/xstream_class_34.java:106: error: cannot find symbol\n\t\t\txstream.processAnnotations(ParameterHolder.class);\n\t\t\t                           ^\n  symbol:   class ParameterHolder\n  location: class xstream_class_34.ConfigParameters\n2 errors\n",
    "return_code": 1
}