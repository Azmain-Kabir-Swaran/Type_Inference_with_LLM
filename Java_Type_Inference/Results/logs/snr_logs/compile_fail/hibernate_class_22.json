{
    "file": "/home/azmain/snr_fixed/hibernate_class_22.java",
    "java_code": "package hibernate;\n//ID = 2531687\n\nimport org.hibernate.Session;\nimport com.google.gwt.json.client.JSONObject;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.Query;\nimport org.hibernate.SessionFactory;\n\n//import com.google.gwt.json.client.JSONObject;\n\npublic class hibernate_class_22 {\n\tpublic JSONObject check() {\n\t\t//creates a new session needed to add elements to a database\n\t\tSession session = null;\n\n\t\t//holds the result of the check in the database\n\t\tJSONObject check = new JSONObject();\n\t\ttry {\n\t\t\t//creates a new session needed to add elements to a database\n\t\t\tSessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();\n\t\t\tsession = sessionFactory.openSession();\n\n\t\t\tString username = null;\n\t\t\tboolean justusername = false;\n\t\t\tif (justusername) {\n\n\t\t\t\t//query created to select a username from user table\n\t\t\t\tString hquery = \"Select username from User user Where username = ? \";\n\n\t\t\t\t//query created\n\t\t\t\tQuery query = session.createQuery(hquery);\n\n\t\t\t\t//sets the username of the query the values JSONObject contents\n\t\t\t\tquery.setString(0, username);\n\n\t\t\t\t// executes query and adds username string variable \n\t\t\t\tString user = (String) query.uniqueResult();\n\n\t\t\t\t//checks to see if result is found (null if not found)\n\t\t\t\tif (user == null) {\n\t\t\t\t\t//adds false to Jobject if not found\n\t\t\t\t\tcheck.put(\"indatabase\", \"false\");\n\t\t\t\t} else {\n\t\t\t\t\tcheck.put(\"indatabase\", \"true\");\n\t\t\t\t}\n\n\t\t\t\t//adds check to Jobject to say just to check username\n\t\t\t\tcheck.put(\"justusername\", true);\n\n\t\t\t} else {\n\t\t\t\t//query created to select a username and password from user table\n\t\t\t\tString hquery = \"Select username from User user Where username = :user and password = :pass \";\n\t\t\t\tQuery query = session.createQuery(hquery);\n\n\t\t\t\tquery.setString(\"user\", username);\n\t\t\t\tString password = null;\n\t\t\t\tquery.setString(\"pass\", password);\n\n\t\t\t\tString user = (String) query.uniqueResult();\n\n\t\t\t\tif (user == null) {\n\t\t\t\t\tcheck.put(\"indatabase\", false);\n\t\t\t\t} else {\n\t\t\t\t\tcheck.put(\"indatabase\", true);\n\t\t\t\t}\n\n\t\t\t\tcheck.put(\"justusername\", false);\n\n\t\t\t}\n\n\t\t} catch (Exception e) {\n\n\t\t\tSystem.out.println(e.getMessage());\n\t\t\t//logg.log(Level.WARNING, \" Exception\", e.getMessage());\n\n\t\t} finally {\n\t\t\t// Actual contact insertion will happen at this step\n\n\t\t\tsession.flush();\n\t\t\tsession.close();\n\n\t\t}\n\t\t//returns Jobject\n\t\treturn check;\n\t}\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/hibernate_class_22.java:43: error: incompatible types: String cannot be converted to JSONValue\n\t\t\t\t\tcheck.put(\"indatabase\", \"false\");\n\t\t\t\t\t                        ^\n/home/azmain/snr_fixed/hibernate_class_22.java:45: error: incompatible types: String cannot be converted to JSONValue\n\t\t\t\t\tcheck.put(\"indatabase\", \"true\");\n\t\t\t\t\t                        ^\n/home/azmain/snr_fixed/hibernate_class_22.java:49: error: incompatible types: boolean cannot be converted to JSONValue\n\t\t\t\tcheck.put(\"justusername\", true);\n\t\t\t\t                          ^\n/home/azmain/snr_fixed/hibernate_class_22.java:63: error: incompatible types: boolean cannot be converted to JSONValue\n\t\t\t\t\tcheck.put(\"indatabase\", false);\n\t\t\t\t\t                        ^\n/home/azmain/snr_fixed/hibernate_class_22.java:65: error: incompatible types: boolean cannot be converted to JSONValue\n\t\t\t\t\tcheck.put(\"indatabase\", true);\n\t\t\t\t\t                        ^\n/home/azmain/snr_fixed/hibernate_class_22.java:68: error: incompatible types: boolean cannot be converted to JSONValue\n\t\t\t\tcheck.put(\"justusername\", false);\n\t\t\t\t                          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n6 errors\n",
    "return_code": 1
}