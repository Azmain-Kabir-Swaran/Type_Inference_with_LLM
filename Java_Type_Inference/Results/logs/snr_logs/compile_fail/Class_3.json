{
    "file": "/home/azmain/snr_fixed/Class_3.java",
    "java_code": "package common_JDK;\n/*\n Date: 1/19/17\n URL: http://stackoverflow.com/questions/153724/how-to-round-a-number-to-n-decimal-places-in-java\n */\n\nimport android.net.ParseException;\nimport java.util.Locale;\nimport java.text.DecimalFormat;\nimport java.text.DecimalFormatSymbols;\nimport java.math.RoundingMode;\n\npublic class Class_3 {\n\n\tprivate static final String SYMBOL_INFINITE = \"\\u221e\";\n\tprivate static final char SYMBOL_MINUS = '-';\n\tprivate static final char SYMBOL_ZERO = '0';\n\tprivate static final int DECIMAL_LEADING_GROUPS = 10;\n\tprivate static final int EXPONENTIAL_INT_THRESHOLD = 1000000000; // After this value switch to exponential notation\n\tprivate static final double EXPONENTIAL_DEC_THRESHOLD = 0.0001; // Below this value switch to exponential notation\n\n\tprivate DecimalFormat decimalFormat;\n\tprivate DecimalFormat decimalFormatLong;\n\tprivate DecimalFormat exponentialFormat;\n\n\tprivate char groupSeparator;\n\n\tpublic void NumberFormatter(int decimalPlaces) {\n\t\tconfigureDecimalPlaces(decimalPlaces);\n\t}\n\n\tpublic void configureDecimalPlaces(int decimalPlaces) {\n\t\tif (decimalPlaces <= 0) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid decimal places\");\n\t\t}\n\n\t\tDecimalFormatSymbols separators = new DecimalFormatSymbols(Locale.getDefault());\n\t\tseparators.setMinusSign(SYMBOL_MINUS);\n\t\tseparators.setZeroDigit(SYMBOL_ZERO);\n\n\t\tgroupSeparator = separators.getGroupingSeparator();\n\n\t\tStringBuilder decimal = new StringBuilder();\n\t\tStringBuilder exponential = new StringBuilder(\"0.\");\n\n\t\tfor (int i = 0; i < DECIMAL_LEADING_GROUPS; i++) {\n\t\t\tdecimal.append(\"###\").append(i == DECIMAL_LEADING_GROUPS - 1 ? \".\" : \",\");\n\t\t}\n\n\t\tfor (int i = 0; i < decimalPlaces; i++) {\n\t\t\tdecimal.append(\"#\");\n\t\t\texponential.append(\"0\");\n\t\t}\n\n\t\texponential.append(\"E0\");\n\n\t\tdecimalFormat = new DecimalFormat(decimal.toString(), separators);\n\t\tdecimalFormatLong = new DecimalFormat(decimal.append(\"####\").toString(), separators);\n\t\texponentialFormat = new DecimalFormat(exponential.toString(), separators);\n\n\t\tdecimalFormat.setRoundingMode(RoundingMode.HALF_UP);\n\t\tdecimalFormatLong.setRoundingMode(RoundingMode.HALF_UP);\n\t\texponentialFormat.setRoundingMode(RoundingMode.HALF_UP);\n\t}\n\n\tpublic String format(double value) {\n\t\tString result;\n\t\tif (Double.isNaN(value)) {\n\t\t\tresult = \"\";\n\t\t} else if (Double.isInfinite(value)) {\n\t\t\tresult = String.valueOf(SYMBOL_INFINITE);\n\t\t} else {\n\t\t\tdouble absValue = Math.abs(value);\n\t\t\tif (absValue >= 1) {\n\t\t\t\tif (absValue >= EXPONENTIAL_INT_THRESHOLD) {\n\t\t\t\t\tvalue = Math.floor(value);\n\t\t\t\t\tresult = exponentialFormat.format(value);\n\t\t\t\t} else {\n\t\t\t\t\tresult = decimalFormat.format(value);\n\t\t\t\t}\n\t\t\t} else if (absValue < 1 && absValue > 0) {\n\t\t\t\tif (absValue >= EXPONENTIAL_DEC_THRESHOLD) {\n\t\t\t\t\tresult = decimalFormat.format(value);\n\t\t\t\t\tif (result.equalsIgnoreCase(\"0\")) {\n\t\t\t\t\t\tresult = decimalFormatLong.format(value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult = exponentialFormat.format(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = \"0\";\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic String formatWithoutGroupSeparators(double value) {\n\t\treturn removeGroupSeparators(format(value));\n\t}\n\n\tpublic double parse(String value, double defValue) {\n\t\ttry {\n\t\t\treturn decimalFormat.parse(value).doubleValue();\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn defValue;\n\t}\n\n\tprivate String removeGroupSeparators(String number) {\n\t\treturn number.replace(String.valueOf(groupSeparator), \"\");\n\t}\n\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/Class_3.java:103: error: unreported exception ParseException; must be caught or declared to be thrown\n\t\t\treturn decimalFormat.parse(value).doubleValue();\n\t\t\t                          ^\n1 error\n",
    "return_code": 1
}