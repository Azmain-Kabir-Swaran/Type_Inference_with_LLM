{
    "file": "/home/azmain/snr_fixed/hibernate_class_26.java",
    "java_code": "package hibernate;\n//ID = 2931936\n\nimport org.hibernate.annotations.Fetch;\nimport javax.persistence.Entity;\nimport javax.persistence.CascadeType;\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.AnnotationConfiguration;\nimport java.util.List;\nimport javax.persistence.GeneratedValue;\nimport org.hibernate.Session;\nimport javax.persistence.OneToOne;\nimport org.hibernate.tool.hbm2ddl.SchemaExport;\nimport org.hibernate.FetchMode;\nimport org.hibernate.Query;\nimport javax.persistence.Id;\n\npublic class hibernate_class_26 {\n\tprivate SessionFactory sessionFactory;\n\n\tpublic static void main(String[] args) {\n\t\thibernate_class_26 d = new hibernate_class_26();\n\t\td.run3();\n\t}\n\n\tpublic void run3() {\n\n\t\tSession session = getSession();\n\t\tsession.beginTransaction();\n\n\t\tcreateEntities(session);\n\n\t\tsession.getTransaction().commit();\n\n\t\tSystem.out.println(\"NOW WITH A NEW TRANSACTION\");\n\t\tsession = getSession();\n\t\tsession.beginTransaction();\n\n\t\tQuery query = session.createQuery(\"from A\");\n\t\tList results = query.list();\n\t\tfor (int i = 0; i < results.size(); i++) {\n\t\t\tSystem.out.println(\"Row \" + i + \" was:\");\n\t\t\tA a = (A) results.get(i);\n\t\t\tSystem.out.println(\"Result \" + i);\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\n\t\tsession.getTransaction().commit();\n\n\t}\n\n\tpublic void createEntities(Session session) {\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tA a = new A();\n\n\t\t\tB b = new B();\n\n\t\t\ta.setB(b);\n\n\t\t\tsession.save(a);\n\n\t\t}\n\n\t}\n\n\tpublic Session getSession() {\n\t\tif (sessionFactory == null) {\n\t\t\tAnnotationConfiguration config = new AnnotationConfiguration();\n\t\t\tconfig.addAnnotatedClass(A.class);\n\t\t\tconfig.addAnnotatedClass(B.class);\n\t\t\tconfig.configure();\n\t\t\tnew SchemaExport(config).create(true, true);\n\n\t\t\tsessionFactory = config.buildSessionFactory();\n\t\t}\n\t\tSession session = sessionFactory.getCurrentSession();\n\n\t\treturn session;\n\t}\n\n\tpublic class A {\n\n\t\tprivate Integer id;\n\t\tprivate B b;\n\n\t\tpublic A() {\n\t\t\tsuper();\n\t\t}\n\n\t\t@Id\n\t\t@GeneratedValue\n\t\tpublic Integer getId() {\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic void setId(Integer id) {\n\t\t\tthis.id = id;\n\t\t}\n\n\t\t@OneToOne(cascade = CascadeType.ALL)\n\t\t@Fetch(FetchMode.JOIN)\n\t\tpublic B getB() {\n\t\t\treturn b;\n\t\t}\n\n\t\tpublic void setB(B b) {\n\t\t\tthis.b = b;\n\t\t}\n\t}\n\n\t@Entity\n\tpublic class B {\n\n\t\tprivate Integer id;\n\n\t\tpublic B() {\n\t\t\tsuper();\n\t\t}\n\n\t\t@Id\n\t\t@GeneratedValue\n\t\tpublic Integer getId() {\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic void setId(Integer id) {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n}",
    "stdout": "",
    "stderr": "/home/azmain/snr_fixed/hibernate_class_26.java:101: error: incompatible types: org.hibernate.FetchMode cannot be converted to org.hibernate.annotations.FetchMode\n\t\t@Fetch(FetchMode.JOIN)\n\t\t                ^\n1 error\n",
    "return_code": 1
}