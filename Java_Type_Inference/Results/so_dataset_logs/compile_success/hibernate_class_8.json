{
    "file": "/home/azmain/GitHub Codes/so_dataset/hibernate_class_8.java",
    "java_code": "\n//ID = 1212669\nimport java.util.Date;\n\nimport javax.persistence.Column;\nimport javax.persistence.MappedSuperclass;\nimport javax.persistence.Temporal;\nimport javax.persistence.TemporalType;\nimport javax.persistence.Transient;\n\nimport org.hibernate.validator.AssertTrue;\nimport org.hibernate.validator.NotNull;\n\n/**\n * Several models are date range sensitive, this base class provides that basic\n * functionality.\n * \n * @author jim\n * \n */\n@MappedSuperclass\npublic abstract class hibernate_class_8 {\nprivate static final long serialVersionUID = 1L;\nprivate Date from;\nprivate Date thru;\n\n/**\n * Determines if a model is active. A model is active if now is after or\n * equal to from , and thru is either null, or after now, or equal to now.\n */\n@Transient\npublic boolean isActive() {\n Date now = new Date();\n boolean afterFrom = from.before(now) || from.equals(now);\n boolean beforeThru = thru == null || thru.after(now)\n   || thru.equals(now);\n return afterFrom && beforeThru;\n}\n\n@AssertTrue(message = \"Dates are not valid the thru date must be empty, or after the fromdate.\")\npublic boolean areDatesValid() {\n if (thru == null) {\n  return true;\n } else {\n  return thru.after(from);\n }\n}\n\n\n@Temporal(TemporalType.TIMESTAMP)\n@NotNull\n@Column(name = \"fromDate\")\npublic Date getFrom() {\n return from;\n}\n\npublic void setFrom(Date from) {\n this.from = from;\n}\n\n@Temporal(TemporalType.TIMESTAMP)\npublic Date getThru() {\n return thru;\n}\n\npublic void setThru(Date thru) {\n this.thru = thru;\n}\n}",
    "stdout": "",
    "stderr": "",
    "return_code": 0
}